[{"D:\\dev\\git\\togh\\npm\\src\\index.js":"1","D:\\dev\\git\\togh\\npm\\src\\Banner.jsx":"2","D:\\dev\\git\\togh\\npm\\src\\BodyTogh.jsx":"3","D:\\dev\\git\\togh\\npm\\src\\reportWebVitals.js":"4","D:\\dev\\git\\togh\\npm\\src\\Menu.jsx":"5","D:\\dev\\git\\togh\\npm\\src\\Login.jsx":"6","D:\\dev\\git\\togh\\npm\\src\\RegisterNewUser.jsx":"7","D:\\dev\\git\\togh\\npm\\src\\EventsList.jsx":"8","D:\\dev\\git\\togh\\npm\\src\\Event.jsx":"9","D:\\dev\\git\\togh\\npm\\src\\EventParticipants.jsx":"10","D:\\dev\\git\\togh\\npm\\src\\EventShoppingList.jsx":"11","D:\\dev\\git\\togh\\npm\\src\\Invitation.jsx":"12","D:\\dev\\git\\togh\\npm\\src\\service\\AuthService.jsx":"13","D:\\dev\\git\\togh\\npm\\src\\service\\FactoryService.jsx":"14","D:\\dev\\git\\togh\\npm\\src\\service\\RestcallService.jsx":"15","d:\\dev\\git\\togh\\npm\\src\\index.js":"16","d:\\dev\\git\\togh\\npm\\src\\Banner.jsx":"17","d:\\dev\\git\\togh\\npm\\src\\BodyTogh.jsx":"18","d:\\dev\\git\\togh\\npm\\src\\reportWebVitals.js":"19","d:\\dev\\git\\togh\\npm\\src\\service\\FactoryService.jsx":"20","d:\\dev\\git\\togh\\npm\\src\\Login.jsx":"21","d:\\dev\\git\\togh\\npm\\src\\EventsList.jsx":"22","d:\\dev\\git\\togh\\npm\\src\\RegisterNewUser.jsx":"23","d:\\dev\\git\\togh\\npm\\src\\service\\AuthService.jsx":"24","d:\\dev\\git\\togh\\npm\\src\\Event.jsx":"25","d:\\dev\\git\\togh\\npm\\src\\Menu.jsx":"26","d:\\dev\\git\\togh\\npm\\src\\service\\RestcallService.jsx":"27","d:\\dev\\git\\togh\\npm\\src\\EventParticipants.jsx":"28","d:\\dev\\git\\togh\\npm\\src\\EventShoppingList.jsx":"29","d:\\dev\\git\\togh\\npm\\src\\Invitation.jsx":"30","D:\\dev\\git\\togh\\npm\\src\\EventState.jsx":"31","D:\\dev\\git\\togh\\npm\\src\\ChooseParticipant.jsx":"32","D:\\dev\\git\\togh\\npm\\src\\EventGeolocalisation.jsx":"33"},{"size":738,"mtime":1611276741332,"results":"34","hashOfConfig":"35"},{"size":837,"mtime":1611280022843,"results":"36","hashOfConfig":"35"},{"size":3661,"mtime":1612130860453,"results":"37","hashOfConfig":"35"},{"size":362,"mtime":499162500000,"results":"38","hashOfConfig":"35"},{"size":2038,"mtime":1611198856051,"results":"39","hashOfConfig":"35"},{"size":5823,"mtime":1612131009854,"results":"40","hashOfConfig":"35"},{"size":5152,"mtime":1611885235879,"results":"41","hashOfConfig":"35"},{"size":4346,"mtime":1612060843684,"results":"42","hashOfConfig":"35"},{"size":14526,"mtime":1612400459305,"results":"43","hashOfConfig":"35"},{"size":4472,"mtime":1612157170785,"results":"44","hashOfConfig":"35"},{"size":4937,"mtime":1612408306704,"results":"45","hashOfConfig":"35"},{"size":7630,"mtime":1612318934186,"results":"46","hashOfConfig":"35"},{"size":4213,"mtime":1612130099982,"results":"47","hashOfConfig":"35"},{"size":1154,"mtime":1611280504794,"results":"48","hashOfConfig":"35"},{"size":1527,"mtime":1612312823993,"results":"49","hashOfConfig":"35"},{"size":738,"mtime":1611276741332,"results":"50","hashOfConfig":"51"},{"size":837,"mtime":1611280022843,"results":"52","hashOfConfig":"51"},{"size":3677,"mtime":1611626834712,"results":"53","hashOfConfig":"51"},{"size":362,"mtime":499162500000,"results":"54","hashOfConfig":"51"},{"size":1154,"mtime":1611280504794,"results":"55","hashOfConfig":"51"},{"size":3681,"mtime":1611533901437,"results":"56","hashOfConfig":"51"},{"size":4140,"mtime":1611533620935,"results":"57","hashOfConfig":"51"},{"size":5301,"mtime":1611629107155,"results":"58","hashOfConfig":"51"},{"size":3392,"mtime":1611629966233,"results":"59","hashOfConfig":"51"},{"size":14859,"mtime":1611627848602,"results":"60","hashOfConfig":"51"},{"size":2038,"mtime":1611198856051,"results":"61","hashOfConfig":"51"},{"size":1526,"mtime":1611366164801,"results":"62","hashOfConfig":"51"},{"size":4205,"mtime":1611539232155,"results":"63","hashOfConfig":"51"},{"size":4425,"mtime":1611019656772,"results":"64","hashOfConfig":"51"},{"size":3656,"mtime":1611019603454,"results":"65","hashOfConfig":"51"},{"size":2344,"mtime":1612405156981,"results":"66","hashOfConfig":"35"},{"size":1889,"mtime":1612408047842,"results":"67","hashOfConfig":"35"},{"size":6216,"mtime":1612406972368,"results":"68","hashOfConfig":"35"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"tk3w76",{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"71"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"71"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"71"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"71"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"71"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"71"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"71"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"71"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"11zcrp5",{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"110"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"110"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"110"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"110"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"110"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"110"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"110"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\dev\\git\\togh\\npm\\src\\index.js",[],["150","151"],"D:\\dev\\git\\togh\\npm\\src\\Banner.jsx",["152"],"// -----------------------------------------------------------\r\n//\r\n// Banner\r\n//\r\n// Banner controler. Display the banner in top.\r\n//  Get the user information. If nobody are connected, be back immediately ! \r\n//\r\n// -----------------------------------------------------------\r\nimport React from 'react';\r\n\r\nimport FactoryService from './service/FactoryService';\r\n\r\nclass Banner extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\t}\r\n\r\n\r\n\trender() {\r\n\t\tvar authService = FactoryService.getInstance().getAuthService();\r\n\t\tconsole.log(\"banner.render isconnected=\"+authService.isConnected());\r\n\t\tif (authService.isConnected()) {\r\n\t\t\tvar user = authService.getUser();\r\n\t\t\treturn ( <div> Welcome {user.firstName} {user.lastName}</div>)\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn ( <div> Welcome to Togh</div>)\r\n\t\t}\r\n\t}\r\n\t\r\n}\t\r\nexport default Banner;\r\n","D:\\dev\\git\\togh\\npm\\src\\BodyTogh.jsx",["153","154"],"// -----------------------------------------------------------\r\n//\r\n// BodyTogh\r\n//\r\n// Manage the main Tog Home application\r\n//\r\n// -----------------------------------------------------------\r\n\r\nimport React from 'react';\r\n\r\nimport Login from './Login';\r\nimport Menu from './Menu';\r\nimport RegisterNewUser from './RegisterNewUser';\r\nimport EventsList from './EventsList';\r\nimport Event from './Event';\r\n\r\nimport FactoryService from './service/FactoryService';\r\nimport AuthService from './service/AuthService';\r\n\r\nclass BodyTogh extends React.Component {\r\n\tconstructor( props ) {\r\n\t\tsuper();\r\n\t\tthis.state = {}\r\n\t\tconsole.log(\"BodyTogh.constructor\");\r\n\r\n\t\tthis.authCallback = this.authCallback.bind(this);\r\n\r\n\t\tthis.homeSelectEvent = this.homeSelectEvent.bind(this)\r\n\t\t\r\n\t\tthis.clickMenu = this.clickMenu.bind( this )\r\n\t\tthis.showMenu = this.showMenu.bind( this );\r\n\t\t\r\n\t\t// this is mandatory to have access to the variable in the method... thank you React!   \r\n\t\t// this.connect = this.connect.bind(this);\r\n\t\tthis.state = { frameContent: 'frameEvents', \r\n\t\t\t\t\t\tshowmenu : true, \r\n\t\t\t\t\t\tsizeMenu:  '10%',\r\n\t\t\t\t\t\tcurrenteventid : null };\r\n\t\t\t\t\t\r\n\t\t\t\r\n\t}\r\n\r\n// { this.state.frameContent == 'frameEvents' && <EventsList selectEvent={this.homeSelectEvent} />}\r\n\t// \t\t\t{ this.state.frameContent == 'event' &&\t<Event eventid={this.state.currenteventid} /> }\r\n\trender() {\r\n\t\tvar factory = FactoryService.getInstance();\r\n\t\tvar authService = factory.getAuthService();\r\n\t\tconsole.log(\"BodyTogh.render isConnected=\"+authService.isConnected()+\" frameContent=[\"+this.state.frameContent+\"] sizeMenu[\"+this.state.sizeMenu+\"]\");\r\n\r\n\t\r\n\t\tif (authService.isConnected() === false) {\r\n\t\t\treturn (\t\t\t\t\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div class=\"container\">\r\n  \t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t<div class=\"col-sm-2\">\r\n\t\t\t\t\t\t\t\tWelcome to Togh<p/>\r\n\t\t\t\t\t\t\t\t<img src=\"img/togh.jpg\" style={{width:150, height:150}} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div class=\"col-sm-5\">\t\r\n\t\t\t\t\t\t\t\t<Login authCallback={this.authCallback}/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"col-sm-5\">\r\n\t\t\t\t\t\t\t\t<RegisterNewUser authCallback={this.authCallback}/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>  \r\n\t\t\t)\r\n\t\t};\r\n\t\r\n\t\t// we are connected, display the frame now\r\n\t\tconst styleMenu = {\r\n\t\t\twidth: this.state.sizeMenu,       \r\n\t\t\t\"vertical-align\": \"top\", \r\n\t\t\t\"border-right\": \"2px solid #194063\",\r\n\t\t\t\"padding-left\" : \"30px\"\r\n        };\r\n\t\treturn (\r\n\t\t\t<div class=\"row\">\r\n\t\t\t<table style={{width: \"100%\", \"height\": \"100%\"}}>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td style={styleMenu} >\r\n\t\t\t\t\t\t<Menu showMenu={this.showMenu} clickMenu={this.clickMenu} authCallback={this.authCallback}/>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td style={{padding: \"10px\", \"vertical-align\": \"top\"}} >\r\n\t\t\t\t\t\t{ this.state.frameContent === 'frameEvents' && <EventsList homeSelectEvent={this.homeSelectEvent} />}\r\n\t\t\t\t\t\t{ this.state.frameContent === 'event' && <Event eventid={this.state.currenteventid} />}\r\n\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\r\n\t\t\t</table>\r\n\t\t\t</div>\t\t\t\r\n\t\t);\r\n\t\t\r\n\t} // end render\r\n\t\r\n\tauthCallback( login ) {\r\n\t\tconsole.log(\"BodyTogh.logcallback: \"+login );\r\n\t\tthis.setState( {'currenteventid' : null }); \r\n\t}\r\n\t\r\n\thomeSelectEvent( eventId ) {\r\n\t\tconsole.log(\"BodyTogh.selectEvent: get it, an event is selected :\"+eventId);\r\n\t\tthis.setState( {'currenteventid' : eventId, 'frameContent': 'event' });\r\n\t}\r\n\r\n\tclickMenu( menuName ) {\r\n\t\tconsole.log(\"BodyTogh.clickMenu: menuAction\"+menuName);\r\n\t\tthis.setState( {'currenteventid' : null, 'frameContent':'frameEvents' });\r\n\t}\r\n\t\r\n\tshowMenu( isVisible ) {\r\n\t\tconsole.log(\"BodyTogh.showMenu\");\r\n\t\tthis.setState( {'sizeMenu' : (isVisible? \"10%\": \"2%\") } );\r\n\t}\r\n\r\n\t\r\n\t\r\n\t\r\n\t\r\n\r\n\t\r\n};\r\n\r\nexport default BodyTogh;\r\n\t\r\n  ","D:\\dev\\git\\togh\\npm\\src\\reportWebVitals.js",[],"D:\\dev\\git\\togh\\npm\\src\\Menu.jsx",[],"D:\\dev\\git\\togh\\npm\\src\\Login.jsx",["155"],"// -----------------------------------------------------------\r\n//\r\n// Login\r\n//\r\n// Login page. Different button are present\r\n//\r\n// -----------------------------------------------------------\r\nimport React from 'react';\r\n\r\nimport { TextInput, Button } from 'carbon-components-react';\r\n\r\n// https://www.npmjs.com/package/react-google-login\r\n// https://dev.to/sivaneshs/add-google-login-to-your-react-apps-in-10-mins-4del\r\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\r\n\r\n\r\nimport FactoryService from './service/FactoryService';\r\n\r\nvar staticLogin=null;\r\n\r\nclass Login extends React.Component {\r\n\t// in props, a function must be give to the call back. When we click on a line, we call\r\n\t// this.props.authCallback()\r\n\tconstructor( props ) {\r\n\t\tsuper();\r\n\t\t// console.log(\"Login.constructor\");\r\n\r\n\t\tthis.state = { email: 'pierre-yves.monnet@laposte.net', password: 'tog', badConnection: false }\r\n\r\n\t\t// this is mandatory to have access to the variable in the method... thank you React!   \r\n\t\tthis.loginConnect = this.loginConnect.bind(this);\r\n\t\tthis.directLogout = this.directLogout.bind( this );\r\n\t\tstaticLogin = this;\r\n\t}\r\n\r\n\t// ------------------------------ Render\r\n\trender() {\r\n\t\t\r\n\t\tlet messageConnection =\"\";\r\n\t\t\r\n\t\tvar factory = FactoryService.getInstance();\r\n\t\tvar authService = factory.getAuthService();\r\n\r\n\t\tconsole.log(\"Login.render: isConnected=\"+authService.isConnected());\r\n\t\tif (authService.isConnected()) {\r\n\t\t\tif (authService.getMethodConnection() ==='DIRECT')\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<button onClick={() =>this.directLogout()} class=\"btn btn-warning\">Logout</button>\r\n\t\t\t\t\t)\r\n\t\t\treturn ( <GoogleLogout \r\n\t\t\t\t\t    clientId=\"393158240427-ltcco0ve39nukr7scbbdcm4r36mi4v4n.apps.googleusercontent.com\"\r\n\t\t\t\t\t\tbuttonText=\"Logout\"\r\n\t\t\t\t\t\tonLogoutSuccess={this.logoutGoogle}/>\r\n\t\t\t \t\t );\r\n\t\t}\r\n\r\n\t\t// ---- not connected, give the different method\r\n\t\tif (this.state.badConnection) {\r\n\t\t\tmessageConnection = messageConnection.concat(\"<div style='color:red'> Bad connection</div>\");\r\n\t\t}\r\n\t\tconsole.log(\"Login.render: badConnection=\" + this.state.badConnection+\" / message=[\"+messageConnection+\"]\");\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t\r\n\t\t\t\t <TextInput labelText=\"Email\" value={this.state.email} onChange={(event) => this.setState({ email: event.target.value })} ></TextInput><p />\r\n\t\t\t\t\r\n\t\t\t\t<TextInput labelText=\"Password\" type=\"password\" value={this.state.password} onChange={(event) => this.setState({ password: event.target.value })} ></TextInput><p />\r\n\t\t\t\t<br/>\r\n\t\t\t\t<button onClick={this.loginConnect} class=\"btn btn-info\">Connection</button><p/>\r\n\t\t\t\t\r\n\t\t\t\t<div dangerouslySetInnerHTML={{ __html: messageConnection}}></div>\r\n\t\t\t\t\r\n\t\t\t\t<br/>\r\n\t\t\t\t\r\n\t\t\t\t<GoogleLogin\r\n\t\t\t\t    clientId=\"393158240427-ltcco0ve39nukr7scbbdcm4r36mi4v4n.apps.googleusercontent.com\"\r\n\t\t\t\t    buttonText=\"Login\"\r\n\t\t\t\t    onSuccess={this.loginGoogle}\r\n\t\t\t\t    \r\n\t\t\t\t    cookiePolicy={'single_host_origin'}\r\n\t\t\t\t  />,\r\n\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t</div>\r\n\t\t)\r\n\t\t// <div class=\"g-signin2\" data-onsuccess=\"onSignIn\"></div>\r\n\t}\r\n\t// ------------------------------\r\n\r\n\r\n\ttoString() {\r\n\t\treturn \"email=[\" + this.state.email+\"],password=[\"+this.state.password+\"] Connection=[\"+this.state.badConnection+\"]\";\r\n\t}\r\n\t\r\n\t\r\n\t// -----------------------------------------------\r\n\t// DIRECT CONNECTION\t\r\n\t// -----------------------------------------------\r\n\t\r\n\t// ----------------------------- Connect\r\n\tloginConnect() {\r\n\t\tconsole.log(\"Login.connect state=\"+JSON.stringify(this.state));\r\n\t\tthis.setState( {badConnection: false});\r\n\t\t\r\n\t\tvar param = { email: this.state.email, password: this.state.password };\r\n\t\t\r\n\t\tFactoryService.getInstance().getAuthService().login( 'DIRECT', param, this, this.loginConnectCallback );\r\n\t}\r\n\t\r\n\tloginConnectCallback( httpPayload ) {\r\n\t\tconsole.log(\"Login.directConnectCallback Result=\"+JSON.stringify(httpPayload));\r\n\t\tif (httpPayload.isConnected) {\r\n\t\t\t// call the frame event to refresh all\r\n\t\t\tthis.props.authCallback( true );\r\n\t\t} else {\r\n\t\t\tthis.setState({ badConnection: true });\r\n\t\t}\r\n\t}\t\r\n\t// ---------------------------- Logout\r\n\tlogoutCallback( httpPayload ) {\r\n\t\tconsole.log(\"Login.logoutCallback Result=\"+JSON.stringify(httpPayload));\r\n\t\t// call the frame event to refresh all\r\n\t\tthis.props.authCallback( false );\r\n\t}\t\r\n\r\n\tdirectLogout() {\r\n\t\tconsole.log(\"Login.logout\");\r\n\t\tFactoryService.getInstance().getAuthService().logout(this, this.logoutCallback );\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t// -----------------------------------------------\r\n\t// GOOGLE CONNECTION\t\r\n\t// -----------------------------------------------\r\n\t\r\n\t// when Google call me back, the this is null... it call the method outside of any object.\r\n\t// so, let's save this to \"staticLogin\" and use it.\r\n\tloginGoogle( googleUser) {\r\n\t\t// console.log(\"Login.loginGoogle googleInformation=\"+JSON.stringify(googleUser));\r\n\t\tconsole.log(\"Login.loginGoogle this=\"+this+\" StaticLogin=\"+staticLogin);\r\n\t\tFactoryService.getInstance().getAuthService().loginGoogle( googleUser, staticLogin, staticLogin.loginGoogleCallBack );\r\n\t};\r\n\tloginGoogleCallBack( httpPayload ) {\r\n\t\tconsole.log(\"Login.loginGoogleCallBack \"+JSON.stringify(httpPayload));\r\n\t\tif (httpPayload.isConnected) {\r\n\t\t\tthis.setState({ isConnected: true });\r\n\t\t} else {\r\n\t\t\tthis.setState({ badConnection: !httpPayload.isConnected, isLog: httpPayload.isConnected });\r\n\t\t}\r\n\t\t// call the frame event to refresh all\r\n\t\tthis.props.authCallback( true );\t\r\n\t\t\r\n\t}\r\n\t\r\n\t// when Google call me back, the this is null... it call the method outside of any object.\r\n\t// so, let's save this to \"staticLogin\" and use it.\r\n\tlogoutGoogle() {\r\n\t\tconsole.log(\"Login.loginGoogle this=\"+this+\" StaticLogin=\"+staticLogin);\r\n\r\n\t\tFactoryService.getInstance().getAuthService().logout(staticLogin, httpPayload => {\r\n\t\t\t\t\tstaticLogin.props.authCallback( false );\r\n\t\t\t});\r\n\r\n\t}\r\n\t\r\n\r\n}\r\nexport default Login;\r\n\r\n","D:\\dev\\git\\togh\\npm\\src\\RegisterNewUser.jsx",[],"D:\\dev\\git\\togh\\npm\\src\\EventsList.jsx",["156","157"],"// -----------------------------------------------------------\r\n//\r\n// HomeEvents\r\n//\r\n// HomeEvents page.Display the list of events\r\n//\r\n// -----------------------------------------------------------\r\n\r\nimport React from 'react';\r\n\r\nimport { Select } from 'carbon-components-react';\r\nimport { SelectItem } from 'carbon-components-react';\r\n\r\n\r\nimport FactoryService from './service/FactoryService';\r\n\r\nimport EventState from './EventState';\r\n\r\nclass EventsList extends React.Component {\r\n\r\n\t// in props, a function must be give to the call back. When we click on a line, we call\r\n\t// this.props.homeSelectEvent( event.id)\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {}\r\n\t\tconsole.log(\"EventsList.constructor - expected homeSelectEvent in the props\");\r\n\t\tthis.state = { filterEvents: \"\", \"message\": \"\", events: [] };\r\n\t\t// this is mandatory to have access to the variable in the method... thank you React!   \r\n\t\tthis.refreshListEvents = this.refreshListEvents.bind(this);\r\n\r\n\t\tthis.createEvent = this.createEvent.bind(this);\r\n\r\n\t\tthis.createEventCallback = this.createEventCallback.bind(this);\r\n\t\tthis.refreshListEvents();\r\n\r\n\t}\r\n\r\n\r\n\t// -------------------------------------------- render\r\n\trender() {\r\n\t\tconsole.log(\"EventList.render listEvents \" + JSON.stringify(this.state.events));\r\n\t\t// no map read, return\r\n\t\tvar listEventsHtml = [];\r\n\t\tif (this.state.events) {\r\n\t\t\tlistEventsHtml = this.state.events.map((event) =>\r\n\t\t\t\t<tr onClick={() => this.props.homeSelectEvent(event.id)} class=\"itemcontent\" key={event.id}>\r\n\t\t\t\t\t<td><button class=\"glyphicon glyphicon glyphicon-tint\" title=\"Access this event\"></button></td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<EventState statusEvent={event.statusEvent} modifyEvent={false} />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>{event.name}</td>\r\n\t\t\t\t\t<td>{event.dateevent}</td>\r\n\t\t\t\t</tr>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div class=\"container-fluid\">\r\n\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t<h1>Events</h1>\r\n\t\t\t\t\t<div style={{ float: \"right\" }}>\r\n\t\t\t\t\t\t<button class=\"btn btn-info btn-lg\" onClick={this.createEvent}>\r\n\t\t\t\t\t\t\t<div class=\"glyphicon glyphicon-plus\"> </div>&nbsp;Create an Event</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t<div class=\"btn-group\" role=\"group\" style={{ padding: \"10px 10px 10px 10px\" }}>\r\n\t\t\t\t\t\t<button class=\"glyphicon glyphicon-refresh\" style={{ \"marginLeft \": \"10px\" }} onClick={this.refreshListEvents}></button>\r\n\t\t\t\t\t\t<button class=\"glyphicon glyphicon-menu-hamburger\" title=\"All events\" style={{ \"marginLeft \": \"10px\" }}></button>\r\n\t\t\t\t\t\t<button class=\"glyphicon glyphicon-user\" title=\"My events\" style={{ \"marginLeft \": \"10px\" }}></button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t<table class=\"table table-striped toghtable\">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th></th>\r\n\t\t\t\t\t\t\t<th colspan=\"2\">Name</th>\r\n\t\t\t\t\t\t\t<th>Date</th>\r\n\t\t\t\t\t\t\t<th>Participants</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t{listEventsHtml}\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>)\r\n\t}\r\n\r\n\r\n\t// -------------------------------------------- Call REST\r\n\tcreateEvent() {\r\n\t\tconsole.log(\"EventsList.createEvent: http[event/create?]\");\r\n\r\n\t\tvar restCallService = FactoryService.getInstance().getRestcallService();\r\n\t\trestCallService.postJson('/api/event/create', {}, httpPayload => {\r\n\t\t\tconsole.log(\"EventList.createEventCallback payload=\" + JSON.stringify(httpPayload.data));\r\n\t\t\tif (httpPayload.data.eventid) {\r\n\t\t\t\tthis.props.homeSelectEvent(httpPayload.data.eventid)\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({ \"message\": httpPayload.data.message });\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tcreateEventCallback(httpPayload) {\r\n\t\tconsole.log(\"EventList.createEventCallback payload=\");\r\n\t\tif (httpPayload.eventid) {\r\n\t\t\tthis.props.selectEvent(httpPayload.eventid)\r\n\t\t} else {\r\n\t\t\tthis.setState({ \"message\": httpPayload.message });\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// ----------- refresh list event\r\n\trefreshListEvents() {\r\n\t\tconsole.log(\"EventsList.refreshListEvents http[event/list?filterEvents=\" + this.state.filterEvents + \"]\");\r\n\t\tthis.setState({ events: [] });\r\n\r\n\r\n\t\tvar restCallService = FactoryService.getInstance().getRestcallService();\r\n\r\n\t\trestCallService.getJson('/api/event/list?filterEvents=' + this.state.filterEvents, httpPayload => {\r\n\t\t\tconsole.log(\"EventsList.refreshListEventsCallback: connectStatus = \" + JSON.stringify(httpPayload.data));\r\n\t\t\tthis.setState({ events: httpPayload.data.events });\r\n\t\t});\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default EventsList;","D:\\dev\\git\\togh\\npm\\src\\Event.jsx",["158"],"D:\\dev\\git\\togh\\npm\\src\\EventParticipants.jsx",["159","160"],"// -----------------------------------------------------------\r\n//\r\n// EventParticipant\r\n//\r\n// Display participants\r\n//\r\n// -----------------------------------------------------------\r\nimport React from 'react';\r\n\r\nimport { Select } from 'carbon-components-react';\r\nimport { Tag } from 'carbon-components-react';\r\nimport Invitation from './Invitation';\r\n\r\nclass EventParticipants extends React.Component {\r\n\t\r\n\t// this.props.pingEvent()\r\n\tconstructor( props ) {\r\n\t\tsuper();\r\n\t\t// console.log(\"RegisterNewUser.constructor\");\r\n\r\n\t\tthis.state = { 'event' : props.event, \r\n\t\t\t\t\t\t'show' : props.show,\r\n\t\t\t\t\t\t'collapse' : props.collapse\r\n\t\t\t\t\t\t};\r\n\t\t// show : OFF, ON, COLLAPSE\r\n\t\tconsole.log(\"EventParticipant.constructor show=\"+ +this.state.show+\" event=\"+JSON.stringify(this.state.event));\r\n\t\tthis.collapse \t\t\t\t= this.collapse.bind(this);\r\n\t\tthis.setChildAttribut\t\t= this.setChildAttribut.bind(this);\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\tconsole.log(\"EventParticipant.render: visible=\"+this.state.show, );\r\n\t\tif (this.state.show === 'OFF')\r\n\t\t\treturn ( <div> </div>);\r\n\t\t// show the list\r\n\t\tvar listParticipantListHtml=[];\r\n\t\t//  \r\n\t\t//\t\r\n\r\n\t\tlistParticipantListHtml= this.state.event.participants.map((item) =>\r\n\t\t\t<tr key={item.id}>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t{item.user !== '' && ( <div>{item.user.firstName} {item.user.lastName} {item.user.email} </div>)}\r\n\t\t\t\t\t{item.user !== '' && item.user.phoneNumber && (<div> {item.user.phoneNumber} </div>)}\r\n\t\t\t\t\t<p/>\r\n\t\t\t\t\t{item.status === 'INVITED' && (<div class=\"label label-info\">Invitation in progress</div>)}\r\n\r\n\t\t\t\t</td>\r\n\t\t\t\t\r\n\t\t\t\t<td>\r\n\t\t\t\t\t{item.role ==='OWNER' && (<div class=\"label label-info\">Owner2</div>)}\r\n\t\t\t\t\t\r\n\t\t\t\t\t{item.role !=='OWNER' && (\r\n\t\t\t\t\t\t<Select labelText=\"\" disabled={item.status==='LEFT'} value={item.role} onChange={(event) => this.setAttribut( \"role\", event.target.value )}>\r\n\t\t\t\t\t\t\t\t<option value=\"ORGANIZER\">Organizer</option>\r\n\t\t\t\t\t\t\t\t<option value=\"PARTICIPANT\">Participant</option>\r\n\t\t\t\t\t\t\t\t<option value=\"OBSERVER\">Observer</option>\r\n\t\t\t\t\t\t\t\t<option value=\"LEFT\">Left</option>\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t</td>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t{item.status==='ACTIF' && <Tag  type=\"green\" title=\"Active participant\">Actif</Tag>}\t\t\t\r\n\t\t\t\t\t{item.status==='INVITED' && <Tag  type=\"teal\" title=\"Invited participant. The participant didn't confirm yet'\">Invited</Tag>}\t\t\t\r\n\t\t\t\t\t{item.status==='LEFT' && <Tag  type=\"red\" title=\"The participant left the event\">Left</Tag>}\t\t\t\r\n\t\t\t\t</td>\r\n\t\t\t</tr>\r\n\t\t\t);\r\n\t\tconsole.log(\"EventParticipant.render: list calculated from \"+JSON.stringify( this.state.event.participantlist ));\r\n\t\tconsole.log(\"EventParticipant.render: \"+listParticipantListHtml.length);\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\r\n\t\treturn ( <div>\r\n\t\t\t\t\t<div class=\"eventsection\"> \r\n\t\t\t\t\t\t<a href=\"secParticipantlist\"></a>\r\n\t\t\t\t\t\t<a onClick={this.collapse}>\r\n\t\t\t\t\t\t\t{this.state.show === 'ON' && <span class=\"glyphicon glyphicon-chevron-down\"></span>}\r\n\t\t\t\t\t\t\t{this.state.show === 'COLLAPSE' && <span class=\"glyphicon glyphicon-chevron-right\"></span>}\r\n\t\t\t\t\t\t</a> Participants\r\n\t\t\t\t\t\t<div style={{float: \"right\"}}>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<Invitation event={this.state.event} participantInvited={this.participantInvited}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div> \r\n\r\n\t\t\t\t\t{this.state.show ==='ON' && \t<table class=\"table table-striped toghtable\">\r\n\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<tr >\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Person</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Role</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Status</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t\t\t\t{listParticipantListHtml}\r\n\t\t\t\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t}\r\n\t\t\r\n\tcollapse() {\r\n\t\tconsole.log(\"EventParticipant.collapse\");\r\n\t\tif (this.state.show === 'ON')\r\n\t\t\tthis.setState( { 'show' : 'COLLAPSE' });\r\n\t\telse\r\n\t\t\tthis.setState( { 'show' : 'ON' });\r\n\t}\r\n\t\r\n\tsetChildAttribut( name, value, item ) {\r\n\t\tconsole.log(\"EventParticipant.setChildAttribut: set attribut:\"+name+\" <= \"+value+\" item=\"+JSON.stringify(item));\r\n\t\tconst { event } = { ...this.state };\r\n  \t\tconst currentEvent = event;\r\n\r\n  \t\titem[ name ] = value;\r\n\r\n\t\t// currentEvent.shoppinglist[0].[name] = value;\r\n\t\t\r\n\t\tthis.setState( { \"event\" : currentEvent});\r\n\t\tthis.props.pingEvent();\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\tparticipantInvited( participant ) {\r\n\t\tconsole.log(\"EventParticipant.participantinvated\");\r\n\t\tvar currentEvent = this.state.event;\t\t\r\n\t\tconst newList = currentEvent.participants.concat( participant  );\r\n\t\tcurrentEvent.participants = newList;\r\n\t\tthis.setState( { \"event\" : currentEvent});\r\n\t\tthis.props.pingEvent();\r\n\t}\r\n\t\r\n}\t\t\r\nexport default EventParticipants;\r\n","D:\\dev\\git\\togh\\npm\\src\\EventShoppingList.jsx",["161","162","163"],"D:\\dev\\git\\togh\\npm\\src\\Invitation.jsx",["164","165","166"],"// -----------------------------------------------------------\r\n//\r\n// Invitation\r\n//\r\n// Display a invitation panel. May be used in an event, or in a \"MyFriend\" list\r\n// The invitation group two main function\r\n//   - search a toghUser. The search can be done from the email, first name, last name, phone number\r\n//   - invite a toghUser, via a Email. Then, a \"non confirmed user\" is created.  \r\n//\r\n// -----------------------------------------------------------\r\nimport React from 'react';\r\n\r\n// import { Button } from 'carbon-components-react';\r\nimport { ModalWrapper } from 'carbon-components-react';\r\nimport { RadioButtonGroup } from 'carbon-components-react';\r\nimport { RadioButton } from 'carbon-components-react';\r\nimport { TextInput } from 'carbon-components-react';\r\nimport { TextArea } from 'carbon-components-react';\r\nimport { Select } from 'carbon-components-react';\r\nimport { Checkbox } from 'carbon-components-react';\r\nimport { Button } from 'carbon-components-react';\r\n\r\nimport FactoryService from './service/FactoryService';\r\n\r\nclass Invitation extends React.Component {\r\n\tconstructor( props ) {\r\n\t\tsuper();\r\n\t\t// participantInvited()\r\n\t\t// console.log(\"RegisterNewUser.constructor\");\r\n\t\tthis.state = { 'event' : props.event,\r\n\t\t\t\t\t\t'email' : '',\r\n\t\t\t\t\t\t'firstName'  : '',\r\n\t\t\t\t\t\t'lastName' : '',\r\n\t\t\t\t\t\t'phoneNumber': '',\t\t\t\t\t\t\r\n\t\t\t\t\t\t'role': 'PARTICIPANT',\r\n\t\t\t\t\t\t'panelVisible': 'INVITATION',\r\n\t\t\t\t\t\t'message': 'Please join this event.',\r\n\t\t\t\t\t\t'statusinvitation' : '',\r\n\t\t\t\t\t\t'listSearchUsers' : []\r\n\t\t\t\t\t\t};\r\n\r\n\t\t// this is mandatory to have access to the variable in the method... thank you React!   \r\n\t\tthis.sendInvitation = this.sendInvitation.bind(this);\r\n\t\tthis.searchToghUser\t= this.searchToghUser.bind(this);\r\n\t\t// this is mandatory to have access to the variable in the method... thank you React!   \r\n\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\tconsole.log(\"Invitation.render \");\r\n\t\tconsole.log(\"Invitation.listSearch=\"+ JSON.stringify( this.state.listSearchUsers ));\r\n\t\t\r\n\t\tvar listSearchUsersHtml = [];\r\n\t\tif (this.state.listSearchUser !== null) {\r\n\t\t\tconsole.log(\"Invitation.buildListUser\");\r\n\t\t\tlistSearchUsersHtml = this.state.listSearchUsers.map((toghUser) =>\r\n\t\t\t\t<tr key={toghUser.id}>\r\n\t\t\t\t\t<td><Checkbox labelText=\"\" id={toghUser.id} /></td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t{toghUser.firstName} {toghUser.lastName}  \r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>{toghUser.phonenumber}</td>\r\n\t\t\t\t\t<td>{toghUser.email}</td>\r\n\t\t\t\t</tr>\r\n\t\t\t);\r\n\t\t}\r\n\t\tconsole.log(\"Invitation.listSearchHtml=\"+listSearchUsersHtml);\r\n\t\t\r\n\t\treturn ( \r\n\t\t\t <ModalWrapper\r\n     \t\t\t buttonTriggerText=\"Invitation\"\r\n     \t\t\t modalLabel=\"Invitation\"\r\n\t\t\t\tprimaryButtonText=\"Close\"\r\n\t\t\t\tsecondaryButtonText=''\r\n\t\t\t\tsize='lg'>\r\n\t\t\t\t\t<RadioButtonGroup\r\n\t\t\t\t\t\tvalueSelected={this.state.panelVisible}\r\n\t\t\t\t\t\tlegend=\"\"\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tconsole.log(\"Invitation.Change type=\"+event);        \t\t\t\t\t\r\n\t\t\t\t\t\t\tthis.setState( {\"panelVisible\": event})}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<RadioButton value=\"INVITATION\" id=\"invitation_r1\" labelText=\"Email Invitation\" labelPosition=\"right\" />\r\n\t\t\t\t\t\t<RadioButton value=\"SEARCH\" id=\"invitation_r2\"  labelText=\"Search a User\" labelPosition=\"right\"/>\r\n\t\t\t\t\t</RadioButtonGroup>\r\n      \t\t\t\t<br/>\r\n      \t\t\t\t{this.state.panelVisible === 'INVITATION' && (<div>\r\n\t\t\t\t\t\t<h2>Invitation</h2>\r\n\r\n\t\t\t\t\t\t<TextInput labelText=\"Email\" value={this.state.email} onChange={(event) => this.setState({ email: event.target.value })} ></TextInput><br />\r\n\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>)\r\n\t\t\t\t\t}\t\t\r\n\t\t\t\t\t{this.state.panelVisible === 'SEARCH' && (<div>\r\n\t\t\t\t\t\t\t<h2>Search</h2>\r\n\t\t\t\t\t\t\t<table>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td style={{\"padding-right\": \"10px\"}}><TextInput labelText=\"First name\" value={this.state.firstName} onChange={(event) => this.setState( { firstName: event.target.value })} ></TextInput>\r\n\t\t\t\t\t\t\t\t</td><td style={{ \"padding-right\": \"10px\"}}><TextInput labelText=\"Last name\" value={this.state.lastName} onChange={(event) => this.setState( { lastName: event.target.value })}></TextInput>\r\n\t\t\t\t\t\t\t\t</td><td style={{ \"padding-right\": \"10px\"}}><TextInput labelText=\"Phone number\" value={this.state.phoneNumber} onChange={(event) => this.setState( { phoneNumber: event.target.value })} ></TextInput>\r\n\t\t\t\t\t\t\t\t</td><td style={{ \"padding-right\": \"10px\"}}><TextInput labelText=\"Email\" value={this.state.email} onChange={(event) => this.setState( {name: event.target.value })} ></TextInput>\r\n\t\t\t\t\t\t\t</td></tr>\r\n\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t<button class=\"btn btn-info btn-lg\" onClick={this.searchToghUser} class=\"btn btn-info\">\r\n\t\t\t\t\t\t\t\t<div class=\"glyphicon glyphicon-search\"> </div>&nbsp;Search\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t<table class=\"table table-striped toghtable\">\r\n\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<th></th>\r\n\t\t\t\t\t\t\t\t\t\t<th>Name</th>\r\n\t\t\t\t\t\t\t\t\t\t<th>Phone number</th>\r\n\t\t\t\t\t\t\t\t\t\t<th>Email</th>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t{listSearchUsersHtml}\r\n\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t</div>)\r\n\t\t\t\t\t}\t\r\n\t\t\t\t\t<p/>\r\n\t\t\t\t\t<TextArea labelText=\"Message\" value={this.state.message} onChange={(event) => this.setState({ message: event.target.value })} ></TextArea><br />\r\n\t\t\t\t\t<table>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td style={{\"padding-right\": \"10px\"}}>\r\n\t\t\t\t\t\t\t\t<Select labelText=\"Role in this event\" value={this.state.role} onChange={(event) => this.setState({ role: event.target.value })}>\r\n\t\t\t\t\t\t\t\t\t<option value=\"ORGANIZER\">Organizer</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"PARTICIPANT\">Participant</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"OBSERVER\">Observer</option>\r\n\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t</td><td>\r\n\t\t\t\t\t\t\t\t<button class=\"btn btn-info btn-lg\" onClick={this.sendInvitation} class=\"btn btn-primary\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"glyphicon glyphicon-envelope\"> </div>&nbsp;Send the invitation\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t\t{this.state.statusinvitation}\t\t\t\r\n    \t\t</ModalWrapper>\r\n\t\t);\r\n\t};\r\n\r\n\tsearchToghUser() {\r\n\t\tconsole.log(\"Invitation.Search: searchToghUser\");\r\n\t\tconsole.log(\"Invitation.Search: search by firstName=\"+this.state.firstName);\r\n\r\n\t\tvar restCallService = FactoryService.getInstance().getRestcallService();\r\n\t\trestCallService.getJson('/api/user/search?firstName='+this.state.firstName+'&lastName='+this.state.lastName+'&email='+this.state.email+'&phoneNumber='+this.state.phoneNumber, \r\n\t\t\thttpPayload => {\r\n\t\t\t\tconsole.log(\"Invitation payload=\" + JSON.stringify(httpPayload.data));\r\n\t\t\t\tthis.setState( { listSearchUsers: httpPayload.data.users});\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t\r\n\tsendInvitation() {\r\n\t\tconsole.log(\"Invitation.sendInvitation: http[event/create?]\");\r\n\r\n\t\tvar param = {\r\n\t\t\teventid : this.state.event.id,\r\n\t\t\temail : this.state.email,\r\n\t\t\tinviteduserid: this.state.inviteduserid,\r\n\t\t\tmessage : this.state.message,\r\n\t\t\trole: this.state.role\r\n\t\t}\r\n\t\tvar restCallService = FactoryService.getInstance().getRestcallService();\r\n\t\trestCallService.postJson('/api/event/invitation', param, httpPayload => {\r\n\t\t\tconsole.log(\"Invitation payload=\" + JSON.stringify(httpPayload.data));\r\n\t\t\tif (httpPayload.data.invitationSent) {\r\n\t\t\t\tthis.setState({ \"statusinvitation\": \"Invitation sent with success\" });\r\n\t\t\t\tconsole.log(\"Invitation : register this new participant =\" + JSON.stringify(httpPayload.data));\r\n\t\t\t\tthis.props.participantInvited(httpPayload.data.participant);\r\n\t\t\t} else if (httpPayload.data.status === 'ALREADYAPARTICIPANT') {\r\n\t\t\t\tthis.setState({ \"statusinvitation\": \"This participant is already registered\" });\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({ \"statusinvitation\": \"An error arrived \"+ httpPayload.data.status });\r\n\t\t\t}\r\n\r\n\t\t});\r\n\t}\r\n\r\n\r\n\r\n\t\r\n\tpingParent() {\r\n\t\tconsole.log(\"Invitation.pingEvent child change\");\r\n\t}\r\n\t\r\n\r\n\t\r\n\t\r\n\t// -------- Rest Call\t\r\n}\r\nexport default Invitation;\r\n\r\n","D:\\dev\\git\\togh\\npm\\src\\service\\AuthService.jsx",["167","168","169"],"// -----------------------------------------------------------\r\n//\r\n// AuthService\r\n//\r\n// AuthService. Access all autorisation API\r\n// access it by\r\n// \r\n// var authService = FactoryService.getInstance().getAuthService();\r\n//\r\n// -----------------------------------------------------------\r\n\r\nimport axios from 'axios';\r\n\r\nimport FactoryService from './FactoryService';\r\nimport RestcallService from './RestcallService';\r\n\r\n\r\nclass AuthService {\r\n\tconstructor(factoryService ) {\r\n\t\tconsole.log(\"AuthService: ------------ constructor \");\r\n\t\tthis.token=null;\r\n\t\tthis.factoryService = factoryService;\r\n\r\n\t}\r\n\r\n\tinit() {\r\n\t\tthis.restcallService = this.factoryService.getRestcallService();\r\n\t};\r\n\t\r\n\tisConnected() {\r\n\t\tvar connection=this.token !==null;\r\n\t\tconsole.log(\"AuthService.isConnected:\"+connection+ +\" in this=\"+this);\r\n\t\treturn connection;\r\n\t}\r\n\t\r\n\t// ---- getUser. When the user is connected, return all information about hime\r\n\tgetUser() {\r\n\t\treturn this.user;\r\n\t};\r\n\t\r\n\tgetMethodConnection() {\r\n\t\treturn this.connectMethod;\r\n\t}\r\n\t\r\n\tgetHeaders( headers) {\r\n\t\tif (headers===null)\r\n\t\t\theaders= {};\r\n\t\theaders.Authorization = this.token;\r\n\t\treturn headers;\r\n\t}\t\r\n\t\r\n\t\r\n\t//--------------------------------------- Login\r\n\tlogin( connectMethod, param, objToCall, fctToCallback ) {\r\n\t\tconsole.log(\"AuthService.login, param=\"+JSON.stringify(param));\r\n\t\tthis.connectMethod = connectMethod;\r\n\t\tvar self=this;\r\n\t\ttry {\r\n\t\t\taxios.post( this.restcallService.getUrl('/api/login?'), param)\r\n\t\t\t\t.then( httpPayload => {\r\n\t\t\t\t\tconsole.log(\"AuthService.loginCallback, httpPayload=\"+JSON.stringify(httpPayload));\r\n\t\t\t\t\tself.token = httpPayload.data.token;\r\n\t\t\t\t\tself.user =  httpPayload.data.user;\r\n\t\t\t\t\tconsole.log(\"AuthService.loginCallback, token=\"+self.token+\" in this=\"+self);\r\n\r\n\t\t\t\t\tfctToCallback.call(objToCall, httpPayload.data);\t\t\r\n\t\t\t\t});\r\n\t\t } catch (err) {\r\n        \t// Handle Error Here\r\n        \tconsole.log(\"AuthService.connect.Error \"+err);\r\n\t\t\treturn {};\r\n\t\t}\r\n    }\r\n\t\r\n\tloginGoogle( googleInformation, objToCall, fctToCallback ) {\r\n\t\ttry {\r\n\t\t\tconsole.log(\"AuthService.loginGoogle, objToCall=\"+objToCall+\" googleInformation=\"+JSON.stringify(googleInformation));\r\n\t\t\tvar self=this;\r\n\r\n\t\t\taxios.get( this.restcallService.getUrl('/api/logingoogle?idtokengoogle=' + googleInformation.tokenId))\r\n\t\t\t\t.then( httpPayload => {\r\n\t\t\t\t\tconsole.log(\"AuthService.loginGoogle, httpPayload=\"+JSON.stringify(httpPayload));\r\n\t\t\t\t\tself.token = httpPayload.data.token;\r\n\t\t\t\t\tself.user =  httpPayload.data.user;\r\n\t\t\t\t\tfctToCallback.call(objToCall, httpPayload.data);\t\t\r\n\t\t\t\t});\r\n\t\t } catch (err) {\r\n        \t// Handle Error Here\r\n        \tconsole.log(\"AuthService.connect.Error \"+err);\r\n\t\t\treturn {};\r\n\t\t}\r\n\t}\r\n\t//--------------------------- RegisterUser\r\n\t//  param= { email: this.state.email, password: this.state.password, firstName:this.state.firstName, lastName: this.state.lastName };\r\n\tregisterUser(param, objToCall, fctToCallback) {\r\n\t\tconsole.log(\"AuthService.registerUser: Register param=\" + JSON.stringify(param));\r\n\t\tvar self=this;\r\n\t\ttry {\r\n\t\t\taxios.post( this.restcallService.getUrl('/api/login/registernewuser?'), param)\r\n\t\t\t\t.then( httpPayload => {\r\n\t\t\t\t\tconsole.log(\"AuthService.registerStatus: registerStatus = \"+JSON.stringify(httpPayload.data));\r\n\t\t\t\t\tself.token = httpPayload.data.token;\r\n\t\t\t\t\tself.user =  httpPayload.data.user;\r\n\t\t\t\t\tself.connectMethod='DIRECT';\r\n\t\t\t\t\tfctToCallback.call(objToCall, httpPayload.data);\t\r\n\t\t\t\t});\r\n\t\t } catch (err) {\r\n        \t// Handle Error Here\r\n        \tconsole.log(\"AuthService.registerUser.Error \"+err);\r\n\t\t\treturn {};\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t//--------------------------------------- Logout\r\n\tlogout( objToCall, fctToCallback) {\r\n\t\tconsole.log(\"AuthService.logout: token = \" +this.token);\r\n\t\r\n\t\tvar param = {};\r\n\t\tvar self=this;\r\n\t\tvar headers= {'Authorization': this.token};\r\n\t\taxios.post( this.restcallService.getUrl('/api/logout?'), param, \r\n\t\t\t{\r\n    \t\t\theaders: this.getHeaders(null)\r\n  \t\t\t}).then(\r\n\t\t\t\thttpPayload => {\r\n\t\t\t\t\tconsole.log(\"AuthService.logout, httpPayload=\"+JSON.stringify(httpPayload));\r\n\t\t\t\t\tself.token = null;\r\n\t\t\t\t\tself.user =  null;\r\n\t\t\t\t\tfctToCallback.call(objToCall, httpPayload.data);\t\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t}\r\n\t\r\n\t\r\n}\r\nexport default AuthService;","D:\\dev\\git\\togh\\npm\\src\\service\\FactoryService.jsx",[],"D:\\dev\\git\\togh\\npm\\src\\service\\RestcallService.jsx",["170","171"],"// -----------------------------------------------------------\r\n//\r\n// RestcallService\r\n//\r\n// RestcallService\r\n//\r\n//  var restCallService = FactoryService.getInstance().getRestcallService();\r\n\r\n// -----------------------------------------------------------\r\n\r\nimport axios from 'axios';\r\nimport FactoryService from './FactoryService';\r\nimport AuthService from './AuthService';\r\n\r\n\r\nclass RestcallService {\r\n\tconstructor( factoryService) {\r\n\t\tconsole.log(\"AuthService: ------------ constructor \");\r\n\t\tthis.factoryService = factoryService;\r\n\t}\r\n\r\n\t// init - separe of constructor because service use themself\r\n\tinit() {\r\n\t\tconsole.log( \"RestcallService.init\");\r\n\t\tthis.authService= this.factoryService.getAuthService();\t\t\r\n\t}\r\n\t\r\n\t// From the URL, complete to have a complete URL\r\n\tgetUrl( uri ) {\r\n\t\treturn 'http://localhost:7080/togh'+uri;\r\n\t}\r\n\t\r\n\tgetJson(uri, fctPayload) {\r\n\t\tvar headers = this.authService.getHeaders( { 'Content-Type': 'application/json' } );\r\n\t\t\r\n\t\tconst requestOptions = {\r\n\t        headers: headers\r\n\t    };\r\n    \taxios.get( this.getUrl( uri), requestOptions)\r\n        \t.then( httpPayload => fctPayload( httpPayload ) );\r\n\t}\r\n\t\r\n\t// PostJson\r\n\tpostJson(uri, param, fctPayload ) {\r\n\t\tvar headers = this.authService.getHeaders( { 'Content-Type': 'application/json' } );\r\n\t\t\r\n\t\tconst requestOptions = {\r\n\t        headers: headers\r\n\t    };\r\n    \taxios.post( this.getUrl( uri), param, requestOptions)\r\n        \t.then( httpPayload => fctPayload( httpPayload ) );\r\n\t}\r\n\t\t\r\n}\r\nexport default RestcallService;","d:\\dev\\git\\togh\\npm\\src\\index.js",[],["172","173"],"d:\\dev\\git\\togh\\npm\\src\\Banner.jsx",["174"],"d:\\dev\\git\\togh\\npm\\src\\BodyTogh.jsx",["175","176"],"// -----------------------------------------------------------\r\n//\r\n// BodyTogh\r\n//\r\n// Manage the main Tog Home application\r\n//\r\n// -----------------------------------------------------------\r\n\r\nimport React from 'react';\r\n\r\nimport Login from './Login';\r\nimport Menu from './Menu';\r\nimport RegisterNewUser from './RegisterNewUser';\r\nimport EventsList from './EventsList';\r\nimport Event from './Event';\r\n\r\nimport FactoryService from './service/FactoryService';\r\nimport AuthService from './service/AuthService';\r\n\r\nclass BodyTogh extends React.Component {\r\n\tconstructor( props ) {\r\n\t\tsuper();\r\n\t\tthis.state = {}\r\n\t\tconsole.log(\"BodyTogh.constructor\");\r\n\r\n\t\tthis.authCallback = this.authCallback.bind(this);\r\n\r\n\t\tthis.homeSelectEvent = this.homeSelectEvent.bind(this)\r\n\t\t\r\n\t\tthis.clickMenu = this.clickMenu.bind( this )\r\n\t\tthis.showMenu = this.showMenu.bind( this );\r\n\t\t\r\n\t\t// this is mandatory to have access to the variable in the method... thank you React!   \r\n\t\t// this.connect = this.connect.bind(this);\r\n\t\tthis.state = { frameContent: 'frameEvents', \r\n\t\t\t\t\t\tshowmenu : true, \r\n\t\t\t\t\t\tsizeMenu:  '10%',\r\n\t\t\t\t\t\tcurrenteventid : null };\r\n\t\t\t\t\t\r\n\t\t\t\r\n\t}\r\n\r\n// { this.state.frameContent == 'frameEvents' && <EventsList selectEvent={this.homeSelectEvent} />}\r\n\t// \t\t\t{ this.state.frameContent == 'event' &&\t<Event eventid={this.state.currenteventid} /> }\r\n\trender() {\r\n\t\tvar factory = FactoryService.getInstance();\r\n\t\tvar authService = factory.getAuthService();\r\n\t\tconsole.log(\"BodyTogh.render isConnected=\"+authService.isConnected()+\" frameContent=[\"+this.state.frameContent+\"] sizeMenu[\"+this.state.sizeMenu+\"]\");\r\n\r\n\t\r\n\t\tif (authService.isConnected() === false) {\r\n\t\t\treturn (\t\t\t\t\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div class=\"container\">\r\n  \t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t<div class=\"col-sm-2\">\r\n\t\t\t\t\t\t\t\tWelcome to Togh<p/>\r\n\t\t\t\t\t\t\t\t<img src=\"img/togh.jpg\" style={{width:150, height:150}} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div class=\"col-sm-5\">\t\r\n\t\t\t\t\t\t\t\tLogin:<p/>\r\n\t\t\t\t\t\t\t\t<Login authCallback={this.authCallback}/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"col-sm-5\">\r\n\t\t\t\t\t\t\t\t<RegisterNewUser authCallback={this.authCallback}/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>  \r\n\t\t\t)\r\n\t\t};\r\n\t\r\n\t\t// we are connected, display the frame now\r\n\t\tconst styleMenu = {\r\n\t\t\twidth: this.state.sizeMenu,       \r\n\t\t\t\"vertical-align\": \"top\", \r\n\t\t\t\"border-right\": \"2px solid #194063\",\r\n\t\t\t\"padding-left\" : \"30px\"\r\n        };\r\n\t\treturn (\r\n\t\t\t<div class=\"row\">\r\n\t\t\t<table style={{width: \"100%\", \"height\": \"100%\"}}>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td style={styleMenu} >\r\n\t\t\t\t\t\t<Menu showMenu={this.showMenu} clickMenu={this.clickMenu} authCallback={this.authCallback}/>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td style={{padding: \"10px\", \"vertical-align\": \"top\"}} >\r\n\t\t\t\t\t\t{ this.state.frameContent === 'frameEvents' && <EventsList selectEvent={this.homeSelectEvent} />}\r\n\t\t\t\t\t\t{ this.state.frameContent === 'event' && <Event eventid={this.state.currenteventid} />}\r\n\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\r\n\t\t\t</table>\r\n\t\t\t</div>\t\t\t\r\n\t\t);\r\n\t\t\r\n\t} // end render\r\n\t\r\n\tauthCallback( login ) {\r\n\t\tconsole.log(\"BodyTogh.logcallback: \"+login );\r\n\t\tthis.setState( {'currenteventid' : null }); \r\n\t}\r\n\t\r\n\thomeSelectEvent( eventId ) {\r\n\t\tconsole.log(\"BodyTogh.selectEvent: get it, an event is selected :\"+eventId);\r\n\t\tthis.setState( {'currenteventid' : eventId, 'frameContent': 'event' });\r\n\t}\r\n\r\n\tclickMenu( menuName ) {\r\n\t\tconsole.log(\"BodyTogh.clickMenu: menuAction\"+menuName);\r\n\t\tthis.setState( {'currenteventid' : null, 'frameContent':'frameEvents' });\r\n\t}\r\n\t\r\n\tshowMenu( isVisible ) {\r\n\t\tconsole.log(\"BodyTogh.showMenu\");\r\n\t\tthis.setState( {'sizeMenu' : (isVisible? \"10%\": \"2%\") } );\r\n\t}\r\n\r\n\t\r\n\t\r\n\t\r\n\t\r\n\r\n\t\r\n};\r\n\r\nexport default BodyTogh;\r\n\t\r\n  ","d:\\dev\\git\\togh\\npm\\src\\reportWebVitals.js",[],"d:\\dev\\git\\togh\\npm\\src\\service\\FactoryService.jsx",[],"d:\\dev\\git\\togh\\npm\\src\\Login.jsx",[],"d:\\dev\\git\\togh\\npm\\src\\EventsList.jsx",[],"d:\\dev\\git\\togh\\npm\\src\\RegisterNewUser.jsx",[],"d:\\dev\\git\\togh\\npm\\src\\service\\AuthService.jsx",["177","178","179"],"// -----------------------------------------------------------\r\n//\r\n// AuthService\r\n//\r\n// AuthService. Access all autorisation API\r\n// access it by\r\n// \r\n// var authService = FactoryService.getInstance().getAuthService();\r\n//\r\n// -----------------------------------------------------------\r\n\r\nimport axios from 'axios';\r\n\r\nimport FactoryService from './FactoryService';\r\nimport RestcallService from './RestcallService';\r\n\r\n\r\nclass AuthService {\r\n\tconstructor(factoryService ) {\r\n\t\tconsole.log(\"AuthService: ------------ constructor \");\r\n\t\tthis.token=null;\r\n\t\tthis.factoryService = factoryService;\r\n\r\n\t}\r\n\r\n\tinit() {\r\n\t\tthis.restcallService = this.factoryService.getRestcallService();\r\n\t};\r\n\t\r\n\tisConnected() {\r\n\t\tvar connection=this.token !==null;\r\n\t\t// console.log(\"AuthService.isConnected:\"+connection)\r\n\t\treturn connection;\r\n\t}\r\n\t\r\n\t// ---- getUser. When the user is connected, return all information about hime\r\n\tgetUser() {\r\n\t\treturn this.user;\r\n\t};\r\n\t\r\n\tgetMethodConnection() {\r\n\t\treturn this.connectMethod;\r\n\t}\r\n\t\r\n\tgetHeaders( headers) {\r\n\t\tif (headers===null)\r\n\t\t\theaders= {};\r\n\t\theaders.Authorization = this.token;\r\n\t\treturn headers;\r\n\t}\t\r\n\t\r\n\t\r\n\t//--------------------------------------- Login\r\n\tlogin( connectMethod, param, objToCall, fctToCallback ) {\r\n\t\tconsole.log(\"AuthService.connect, param=\"+JSON.stringify(param));\r\n\t\tthis.connectMethod = connectMethod;\r\n\t\tvar self=this;\r\n\t\ttry {\r\n\t\t\taxios.post( this.restcallService.getUrl('/api/login?'), param)\r\n\t\t\t\t.then( httpPayload => {\r\n\t\t\t\t\tconsole.log(\"AuthService.connectCallBack, httpPayload=\"+JSON.stringify(httpPayload));\r\n\t\t\t\t\tself.token = httpPayload.data.token;\r\n\t\t\t\t\tself.user =  httpPayload.data.user;\r\n\t\t\t\t\tfctToCallback.call(objToCall, httpPayload.data);\t\t\r\n\t\t\t\t});\r\n\t\t } catch (err) {\r\n        \t// Handle Error Here\r\n        \tconsole.log(\"AuthService.connect.Error \"+err);\r\n\t\t\treturn {};\r\n\t\t}\r\n    }\r\n\t\r\n\t//--------------------------- RegisterUser\r\n\t//  param= { email: this.state.email, password: this.state.password, firstName:this.state.firstName, lastName: this.state.lastName };\r\n\tregisterUser(param, objToCall, fctToCallback) {\r\n\t\tconsole.log(\"AuthService.registerUser: Register param=\" + JSON.stringify(param));\r\n\t\tvar self=this;\r\n\t\ttry {\r\n\t\t\taxios.post( this.restcallService.getUrl('/api/login/registernewuser?'), param)\r\n\t\t\t\t.then( httpPayload => {\r\n\t\t\t\t\tconsole.log(\"AuthService.registerStatus: registerStatus = \"+JSON.stringify(httpPayload.data));\r\n\t\t\t\t\tself.token = httpPayload.data.token;\r\n\t\t\t\t\tself.user =  httpPayload.data.user;\r\n\t\t\t\t\tself.connectMethod='DIRECT';\r\n\t\t\t\t\tfctToCallback.call(objToCall, httpPayload.data);\t\r\n\t\t\t\t});\r\n\t\t } catch (err) {\r\n        \t// Handle Error Here\r\n        \tconsole.log(\"AuthService.registerUser.Error \"+err);\r\n\t\t\treturn {};\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t//--------------------------------------- Logout\r\n\tlogout( objToCall, fctToCallback) {\r\n\t\tconsole.log(\"AuthService.logout: token = \" +this.token);\r\n\t\r\n\t\tvar param = {};\r\n\t\tvar self=this;\r\n\t\tvar headers= {'Authorization': this.token};\r\n\t\taxios.post( this.restcallService.getUrl('/api/logout?'), param, \r\n\t\t\t{\r\n    \t\t\theaders: this.getHeaders(null)\r\n  \t\t\t}).then(\r\n\t\t\t\thttpPayload => {\r\n\t\t\t\t\tconsole.log(\"AuthService.logout, httpPayload=\"+JSON.stringify(httpPayload));\r\n\t\t\t\t\tself.token = null;\r\n\t\t\t\t\tself.user =  null;\r\n\t\t\t\t\tfctToCallback.call(objToCall, httpPayload.data);\t\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t}\r\n\t\r\n\t\r\n}\r\nexport default AuthService;","d:\\dev\\git\\togh\\npm\\src\\Event.jsx",["180","181","182"],"// -----------------------------------------------------------\r\n//\r\n// Event\r\n//\r\n// Display one event\r\n//\r\n// -----------------------------------------------------------\r\n\r\nimport React from 'react';\r\n\r\nimport FactoryService from './service/FactoryService';\r\n\r\n// import { Button } from 'carbon-components-react';\r\nimport { DatePicker } from 'carbon-components-react';\r\nimport { DatePickerInput } from 'carbon-components-react';\r\nimport { TimePicker } from 'carbon-components-react';\r\nimport { TimePickerSelect } from 'carbon-components-react';\r\nimport { SelectItem } from 'carbon-components-react';\r\nimport { RadioButtonGroup } from 'carbon-components-react';\r\nimport { RadioButton } from 'carbon-components-react';\r\n\r\n// import DatePickerSkeleton from '@bit/carbon-design-system.carbon-components-react.DatePicker/DatePicker.Skeleton';\r\n// import TimePicker from '@bit/carbon-design-system.carbon-components-react.time-picker';\r\n\r\n\r\nimport EventParticipants from './EventParticipants';\r\nimport EventShoppingList from './EventShoppingList';\r\n\r\n\r\nclass Event extends React.Component {\r\n\tconstructor( props ) {\r\n\t\tsuper();\r\n\t\t// console.log(\"RegisterNewUser.constructor\");\r\n\r\n\t\tthis.state = { 'event' : {}, \r\n\t\t\t\t\t\t'eventid' : props.eventid,\r\n\t\t\t\t\t\t'show' : { 'secParticipant': 'ON', 'secShoppinglist' : 'OFF'},\r\n\t\t\t\t\t\tshowRegistration : false\r\n\t\t\t\t\t\t};\r\n\r\n\t\t// this is mandatory to have access to the variable in the method... thank you React!   \r\n\t\tthis.showRegistration \t\t\t= this.showRegistration.bind(this);\r\n\t\tthis.accessParticipantList \t\t= this.accessParticipantList.bind(this);\r\n\t\tthis.accessShoppingList\t\t\t= this.accessShoppingList.bind(this);\r\n\t\t\r\n\r\n\t\t// this is mandatory to have access to the variable in the method... thank you React!   \r\n\t\tthis.refreshEvent \t\t= this.refreshEvent.bind(this);\r\n\t\tthis.setAttribut \t\t= this.setAttribut.bind(this);\r\n\t\tthis.pingEvent\t\t\t= this.pingEvent.bind(this);\r\n\t\tthis.refreshEvent();\r\n\r\n\t}\r\n\r\n\t//----------------------------------- Render\r\n\trender() {\r\n\t\tconsole.log(\"Event.render eventId=\"+this.props.eventid + \" event=\"+JSON.stringify(this.state.event));\r\n\r\n\t\t// no map read, return\r\n\t\tif (! this.state.event || Object.keys(this.state.event).length === 0) {\r\n\t\t\tconsole.log(\"Event.render: noEvent \");\r\n\t\t\treturn (<div />);\r\n\t\t}\r\n\t\t\t\t\r\n\t\tconsole.log(\"Event.render: section=secShoppinglist= \"+this.state.show.secShoppinglist);\r\n\t\t\r\n\t\tvar statusHtml = this.getStatusHtml( this.state.event);\r\n\t\t\r\n\t\r\n\t\t\t\t\r\n\t\tvar datePanelHtml = (\r\n\t\t\t<div>\r\n\t\t\t\t<RadioButtonGroup\r\n\t\t\t\t\t\tvalueSelected={this.state.event.datePolicy}\r\n\t\t\t\t\t\tlegend=\"Legend\"\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tconsole.log(\"RadioGroup on change=\"+JSON.stringify(event));\r\n        \t\t\t\t\t\r\n\t\t\t\t\t\t\tthis.setAttribut( \"datePolicy\", event)}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t<RadioButton value=\"ONEDATE\" id=\"r1\" labelText=\"One date\" labelPosition=\"right\" />\r\n\t\t\t\t\t<RadioButton value=\"PERIOD\" id=\"r2\"  labelText=\"Period\" labelPosition=\"right\"/>\r\n\t\t\t\t</RadioButtonGroup>\r\n\t\t\t\t{ this.state.event.datePolicy === 'ONEDATE' && (\t\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<DatePicker datePickerType=\"single\"\r\n\t\t\t\t\t\t\tonChange={(event) => this.setAttribut( \"dateEvent\", event ) }>\r\n        \t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t<DatePickerInput\r\n\t\t\t\t\t\t    \tplaceholder=\"mm/dd/yyyy\"\r\n\t\t\t\t\t\t      \tlabelText=\"Date Picker label\"\r\n\t\t\t\t\t\t      \tid=\"date-picker-simple\"\r\n\t\t\t\t\t\t\t  \tvalue={this.state.event.dateEvent} \r\n\t\t\t\t\t\t    />\r\n\t\t\t\t\t\t</DatePicker>\r\n\t\t\t\t\t\t<TimePicker\r\n\t\t\t\t\t\t  value={this.state.event.timeEvent} \r\n\t\t\t\t\t\t  onChange={(event) => this.setAttribut( \"timeEvent\", event.target.value )}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</TimePicker>\r\n\t\t\t\t\t</div>)\r\n\t\t\t\t}\t\r\n\t\t\t\t{ this.state.event.datePolicy !== 'ONEDATE' && (\t\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t <DatePicker datePickerType=\"range\"\r\n\t\t\t\t  \t\t\t\tonChange={(selectedDates, dateStr) => { \r\n\t\t\t\t\t\t\t\t\tconsole.log(\"RangeDatePicker :\"+selectedDates+\" dateStr=\"+dateStr);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t      <DatePickerInput\r\n\t\t\t\t\t\t        id=\"date-picker-input-id-start\"\r\n\t\t\t\t\t\t        placeholder=\"mm/dd/yyyy\"\r\n\t\t\t\t\t\t        labelText=\"Start date\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.event.dateStartEvent} \r\n\t\t\t\t\t\t\t\tonChange={(selectedDates, dateStr) => { \r\n\t\t\t\t\t\t\t\t\tconsole.log(\"RangeDatePickerSTART :\"+selectedDates+\" dateStr=\"+dateStr);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t      />\r\n\t\t\t\t\t\t      <DatePickerInput\r\n\t\t\t\t\t\t        id=\"date-picker-input-id-finish\"\r\n\t\t\t\t\t\t        placeholder=\"mm/dd/yyyy\"\r\n\t\t\t\t\t\t        labelText=\"End date\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.event.dateEndEvent} \r\n\t\t\t\t\t\t\t\tonChange={(selectedDates, dateStr) => { \r\n\t\t\t\t\t\t\t\t\tconsole.log(\"RangeDatePickerEND :\"+selectedDates+\" dateStr=\"+dateStr);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t      />\r\n\t\t\t\t\t\t</DatePicker>\r\n\t\t\t\t\t</div> )\r\n\t\t\t\t}\r\n\r\n\t\t\t\t<div> <p/> Policy {this.state.event.datePolicy} \r\n\t\t\t\t\tDate: {this.state.event.dateEvent} \r\n\t\t\t\t\tTime: {this.state.event.timeEvent}\r\n\t\t\t\t\tRange :{this.state.event.dateStartEvent} to {this.state.event.dateEndEvent}\r\n\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t\t\r\n\r\n\t\t\t\t\t\r\n\t\t// -----------------\t \r\n\t\treturn ( \r\n\t\t\t<div> \r\n\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t<div class=\"col-sm-6\">\r\n\t\t\t\t\t\t<h1>{this.state.event.name}\r\n\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-sm-2\">\r\n\t\t\t\t\t\t<div class=\"fieldlabel\">Status</div>\r\n\t\t\t\t\t\t{statusHtml}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-sm-2\">\r\n\t\t\t\t\t\t<div class=\"fieldlabel\">Scope</div>\r\n\t\t\t\t\t \t<select value={this.state.event.typeEvent} onChange={(event) => this.setAttribut( \"typeEvent\", event.target.value )}>\r\n\t\t\t\t\t\t\t<option value=\"OPEN\">Open</option>\r\n\t\t\t\t\t\t\t<option value=\"OPENCONF\">Open on confirmation</option>\r\n\t\t\t\t\t\t\t<option value=\"LIMITED\">Limited</option>\r\n\t\t\t\t\t\t\t<option value=\"SECRET\">Secret</option>\r\n\t\t\t\t\t\t</select>\r\n        \t\t\t</div>\r\n\t\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t<div class=\"col-sm-6\">\r\n\t\t\t\t\t\t<div class=\"fieldlabel\">Name</div>\r\n\t\t\t\t\t\t<input value={this.state.event.name} onChange={(event) => this.setAttribut( \"name\", event.target.value )} class=\"toghinput\"></input><br />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-sm-6\">\r\n\t\t\t\t\t\t<div class=\"panel panel-info\">\r\n\t\t\t\t\t\t\t<div class=\"panel-heading\">Date</div>\r\n\t\t\t\t\t\t\t<div class=\"panel-body\">\r\n\t\t\t\t\t\t\t\t{datePanelHtml}\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t<div class=\"col-sm-12\">\r\n\t\t\t\t\t\t<div class=\"fieldlabel\">Description</div>\r\n\t\t\t\t\t\t<textarea  style={{width: \"100%\", maxWidth: \"100%\"}} rows=\"5\" value={this.state.event.description} onChange={(event) => this.setAttribut( \"description\", event.target.value )}></textarea>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\t\r\n\t\t\t\t\r\n\t\t\t\t<div class=\"row\" style={{ padding: \"10px 30px 10px\"}}>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div class=\"btn-toolbar mb-3\" role=\"toolbar\" aria-label=\"Toolbar with button groups\" >\r\n\t\t\t\t  \t\t<div class=\"btn-group mr-2\" role=\"group\" aria-label=\"First group\">\r\n\t\t\t\t\t\t\t<button   onClick={this.secParticipant} title=\"Participants\" onClick={this.accessParticipantList} class=\"btn btn-primary\">\r\n\t\t\t\t\t\t\t\t<div class=\"glyphicon glyphicon-user\"></div> \r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"btn-group mr-2\" role=\"group\" aria-label=\"First group\">\r\n\t\t\t\t\t\t\t<button onClick={this.secDates} title=\"Dates\" disabled={true} class=\"btn btn-primary\">\r\n\t\t\t\t\t\t\t\t<div class=\"glyphicon glyphicon-calendar\"></div> \r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div class=\"btn-group mr-2\" role=\"group\" aria-label=\"First group\">\r\n\t\t\t\t\t\t\t<button style={{\"marginLeft \": \"10px\"}} onClick={this.secChat} title=\"Chat channel\" disabled={true} class=\"btn btn-primary\">\r\n\t\t\t\t\t\t\t\t<div class=\"glyphicon glyphicon-bullhorn\" ></div>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div class=\"btn-group mr-2\" role=\"group\" aria-label=\"First group\">\r\n\t\t\t\t\t\t\t<button style={{\"marginLeft \": \"10px\"}} onClick={this.secTasks} title=\"Tasks\" class=\"btn btn-primary\">\r\n\t\t\t\t\t\t\t\t<div class=\"glyphicon glyphicon-tasks\"></div> \r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div class=\"btn-group mr-2\" role=\"group\" aria-label=\"First group\">\r\n\t\t\t\t\t\t\t<button style={{\"marginLeft \": \"10px\"}} title=\"Shopping list : what to brings?\" onClick={this.accessShoppingList} class=\"btn btn-primary\">\r\n\t\t\t\t\t\t\t\t<div class=\"glyphicon glyphicon-shopping-cart\"></div>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"btn-group mr-2\" role=\"group\" aria-label=\"First group\">\r\n\t\t\t\t\t\t\t<button style={{\"marginLeft \": \"10px\"}} onClick={this.secSurvey} title=\"Manage Survey\" class=\"btn btn-primary\">\r\n\t\t\t\t\t\t\t\t<div class=\"glyphicon glyphicon-ok-circle\"></div>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"btn-group mr-2\" role=\"group\" aria-label=\"First group\">\r\n\t\t\t\t\t\t\t<button style={{\"marginLeft \": \"10px\"}} onClick={this.secLocalisation} title=\"Where is the event?\" class=\"btn btn-primary\">\r\n\t\t\t\t\t\t\t\t<div class=\"glyphicon glyphicon-globe\"></div>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"btn-group mr-2\" role=\"group\" aria-label=\"First group\">\r\n\t\t\t\t\t\t\t<button style={{\"marginLeft \": \"10px\"}} onClick={this.secItineraire} title=\"Itineraire\" class=\"btn btn-primary\">\r\n\t\t\t\t\t\t\t\t<div class=\"glyphicon glyphicon-road\"></div>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"btn-group mr-2\" role=\"group\" aria-label=\"First group\">\r\n\t\t\t\t\t\t\t<button style={{\"marginLeft \": \"10px\"}} onClick={this.secPointofInterest} title=\"Point of interest\" class=\"btn btn-primary\">\r\n\t\t\t\t\t\t\t\t<div class=\"glyphicon glyphicon-camera\"></div>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div class=\"btn-group mr-2\" role=\"group\" aria-label=\"First group\">\r\n\t\t\t\t\t\t\t<button style={{\"marginLeft \": \"10px\"}} onClick={this.secNight} title=\"What do we sleep?\" class=\"btn btn-primary\">\r\n\t\t\t\t\t\t\t\t<div class=\"glyphicon glyphicon-home\"></div>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"btn-group mr-2\" role=\"group\" aria-label=\"First group\">\r\n\t\t\t\t\t\t\t<button style={{\"marginLeft \": \"10px\"}} onClick={this.secExpense} title=\"Expense\" class=\"btn btn-primary\">\r\n\t\t\t\t\t\t\t\t<div class=\"glyphicon glyphicon-piggy-bank\"></div>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t{ this.state.show.secParticipant !== 'OFF' && <EventParticipants event={this.state.event} show={this.state.show.secParticipant} pingEvent={this.pingEvent}/>}\r\n\t\t\t\t{ this.state.show.secShoppinglist !== 'OFF' && <EventShoppingList event={this.state.event} show={this.state.show.secShoppinglist} pingEvent={this.pingEvent}/>}\r\n\t\t\t</div>)\t\r\n\t} //---------------------------- end Render\r\n\r\n\r\n\tshowRegistration() {\r\n\t\tconsole.log(\"ShowRegistration !!!!!!!!!!!!!!!!!!\");\r\n\t\tconsole.log(\"Event.showRegistration state=\"+JSON.stringify(this.state));\r\n\r\n\t\tthis.setState( {showRegistration: true });\r\n\t}\r\n\r\n\r\n\tgetStatusHtml( event ) {\r\n\t\tif (event.statusEvent === 'INPREPAR')\r\n\t\t\treturn (<div class=\"label label-info\">In preparation</div>);\t\t\t\r\n\t\telse if (this.state.event.statusEvent === 'INPROG')\r\n\t\t\treturn  (<div class=\"label label-info\">Actif</div>);\r\n\t\telse if (this.state.event.statusEvent === 'CLOSED')\r\n\t\t\treturn (<div class=\"label label-warning\">Done</div>);\r\n\t\telse if (this.state.event.statusEvent === 'CANCEL')\r\n\t\t\treturn (<div class=\"label label-danger\">Cancelled</div>);\r\n\t\telse \r\n\t\t\treturn (<div class=\"label label-danger\">{event.statusEvent}</div>);\r\n\t}\r\n\r\n\r\n\r\n\t// provide automatic save\r\n\tsetAttribut( name, value ) {\r\n\t\tconsole.log(\"Event.setAttribut: attribut:\"+name+\" <= \"+value+\" typeof=\"+ (typeof value)+\" EventinProgress=\"+JSON.stringify(this.state.event));\r\n\t\tvar eventValue = this.state.event;\r\n\t\teventValue[name]= value;\r\n\r\n\t\tthis.setState( { \"event\" : eventValue});\r\n\t\tif (this.timer)\r\n\t\t\tclearTimeout( this.timer);\r\n\t\tthis.timer = this.timer = setTimeout(() => { this.automaticSave();  }, 2000);\r\n\t}\r\n\t\r\n\tpingEvent() {\r\n\t\tconsole.log(\"Event.pingEvent child change:\"+JSON.stringify(this.state.event));\r\n\t\tif (this.timer)\r\n\t\t\tclearTimeout( this.timer);\r\n\t\tthis.timer = this.timer = setTimeout(() => { this.automaticSave();  }, 2000);\r\n\r\n\t}\r\n\tautomaticSave() {\r\n\t\tconsole.log(\"Event.AutomaticSave: event=\"+JSON.stringify(this.state.event));\r\n\t\tif (this.timer)\r\n\t\t\tclearTimeout( this.timer);\r\n\t\t\r\n\t}\r\n\t\r\n\t// -------------------------------------------- Access different part\r\n\t\r\n\t// accessParticipantList\r\n\t accessParticipantList() {\r\n\t\t\r\n\t\tconsole.log(\"Event.accessParticipantList state=\"+JSON.stringify(this.state));\r\n\t\tvar event = this.state.event; \r\n\t\tif (!  event.participants ) {\r\n\t\t\tconsole.log(\"Event.accessParticipantList: not normal but be robust, create one\");\r\n\t\t\tevent.participants=[];\r\n\t\t\tthis.setState( {\"event\" : event })\r\n\t\t}\r\n\t\tthis.showSection (\"secParticipantlist\");\r\n\r\n\t}\r\n\t\r\n\t// Shopping list\r\n\taccessShoppingList() {\r\n\t\tconsole.log(\"accessShoppingList !!!!!!!!!!!!!!!!!!\");\r\n\t\tconsole.log(\"Event.accessShoppingList state=\"+JSON.stringify(this.state));\r\n\t\tvar event = this.state.event; \r\n\t\tif (!  event.shoppinglist ) {\r\n\t\t\tconsole.log(\"Event.accessShoppingList: no shopping list exist, create one\");\r\n\t\t\tevent.shoppinglist=[ {\"what\":\"\", \"who\":\"\"} ];\r\n\t\t\tevent.shoppinglist.push( { \"what\": \"line 2\"});\r\n\t\t\tthis.setState( {\"event\" : event })\r\n\t\t}\r\n\t\tthis.showSection (\"secShoppinglist\");\r\n\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Show the section\r\n\tshowSection( sectionName ) {\r\n\t\tconsole.log(\"Event.showSection: Show the section[\"+sectionName+\"]\");\r\n\r\n\t\tvar show = this.state.show;\r\n\t\tshow[ sectionName ] = 'ON'; \r\n\t\tthis.setState( {\"show\": show });\r\n\t\t\r\n\t\t/* Find matching element by id */\r\n        const anchor = document.getElementById(sectionName);\r\n\r\n        if(anchor) {\r\n            /* Scroll to that element if present */\r\n            anchor.scrollIntoView();\r\n        }\r\n\t}\r\n\t\r\n\t\r\n\t// -------------------------------------------- Call REST\r\n\trefreshEvent() {\r\n\t\tconsole.log(\"Event: http[event?id=\"+this.state.eventid+\"]\");\r\n\t\tthis.setState( {event: {}});\r\n\t\r\n\t\tvar restCallService = FactoryService.getInstance().getRestcallService();\r\n\t\trestCallService.getJson( '/api/event?id='+this.state.eventid, httpPayload => {\r\n\t\t\t\tconsole.log(\"Event.getPayload: get \"+JSON.stringify(httpPayload.data)); \r\n\t\t\t\tthis.setState( {event: httpPayload.data.event});\r\n\t\t\t\tvar show = this.state.show;\r\n\t\t\t\tif (httpPayload.data.event && httpPayload.data.event.shoppinglist)\r\n\t\t\t\t\tshow.secShoppingList = 'COLLAPSE';\r\n\t\t\t\tconsole.log(\"Event.getPayload: show \"+JSON.stringify(show)); \r\n\r\n\t\t\t\tthis.setState( {show: show});\r\n\t\t\t\t});\r\n\t\t/*\r\n\t\t\r\n \t\t\r\n\t\tconst requestOptions = {\r\n\t        method: 'GET',\r\n\t        headers: { 'Content-Type': 'application/json' }\r\n\t    };\r\n    \tfetch('event?id='+this.state.eventid, requestOptions)\r\n\t\t\t.then(response => response.json())\r\n        \t.then( httpPayload => this.setEventCallback( httpPayload ));\r\n*/\r\n\t}\r\n\t/*\r\n\tsetEventCallback( httpPayload ) {\r\n\t\tconsole.log(\"Event.getPayload: get \"+JSON.stringify(httpPayload)); \r\n\t\tthis.setState( {event: httpPayload.event});\r\n\t\tvar show = this.state.show;\r\n\t\tif (httpPayload.event && httpPayload.event.shoppinglist)\r\n\t\t\tshow.secShoppingList = 'COLLAPSE';\r\n\t\t\t\t\r\n\t\tconsole.log(\"Event.getPayload: show \"+JSON.stringify(show)); \r\n\r\n\t\tthis.setState( {show: show});\r\n\t}\r\n*/\r\n\t\r\n\t\r\n\t\r\n\t// -------- Rest Call\r\n\t\r\n}\r\nexport default Event;","d:\\dev\\git\\togh\\npm\\src\\Menu.jsx",[],"d:\\dev\\git\\togh\\npm\\src\\service\\RestcallService.jsx",["183","184"],"d:\\dev\\git\\togh\\npm\\src\\EventParticipants.jsx",["185","186"],"// -----------------------------------------------------------\r\n//\r\n// EventParticipant\r\n//\r\n// Display participants\r\n//\r\n// -----------------------------------------------------------\r\nimport React from 'react';\r\n\r\nimport Invitation from './Invitation';\r\n\r\nclass EventParticipants extends React.Component {\r\n\t\r\n\t// this.props.pingEvent()\r\n\tconstructor( props ) {\r\n\t\tsuper();\r\n\t\t// console.log(\"RegisterNewUser.constructor\");\r\n\r\n\t\tthis.state = { 'event' : props.event, \r\n\t\t\t\t\t\t'show' : props.show,\r\n\t\t\t\t\t\t'collapse' : props.collapse\r\n\t\t\t\t\t\t};\r\n\t\t// show : OFF, ON, COLLAPSE\r\n\t\tconsole.log(\"EventParticipant.constructor show=\"+ +this.state.show+\" event=\"+JSON.stringify(this.state.event));\r\n\t\tthis.collapse \t\t\t\t= this.collapse.bind(this);\r\n\t\tthis.setChildAttribut\t\t= this.setChildAttribut.bind(this);\r\n\t\tthis.addItem\t\t\t\t= this.addItem.bind(this);\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\tconsole.log(\"EventParticipant.render: visible=\"+this.state.show, );\r\n\t\tif (this.state.show === 'OFF')\r\n\t\t\treturn ( <div> </div>);\r\n\t\t// show the list\r\n\t\tvar listParticipantListHtml=[];\r\n\t\tlistParticipantListHtml= this.state.event.participants.map((item) =>\r\n\t\t\t<tr class=\"itemcontent\" key={item.id}>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t{item.user !== '' && ( <div>{item.user.firstname} {item.user.lastname}</div>)}\r\n\t\t\t\t\t{item.user === '' && ( <div>{item.user.email}</div>)}\r\n\t\t\t\t\t{item.user.sourceUser === 'INVITED' && (<div class=\"label label-info\">Invitation in progress</div>)}\r\n\t\t\t\t</td>\r\n\t\t\t\t\r\n\t\t\t\t<td>\r\n\t\t\t\t\t{item.role ==='OWNER' && (<div class=\"label label-info\">Owner</div>)}\r\n\t\t\t\t\t{item.role !=='OWNER' && (\r\n\t\t\t\t\t\t<select value={item.role} onChange={(event) => this.setAttribut( \"role\", event.target.value )}>\r\n\t\t\t\t\t\t\t\t<option value=\"ORGANIZER\">Organizer</option>\r\n\t\t\t\t\t\t\t\t<option value=\"PARTICIPANT\">Participant</option>\r\n\t\t\t\t\t\t\t\t<option value=\"OBSERVER\">Observer</option>\r\n\t\t\t\t\t\t\t\t<option value=\"LEFT\">Left</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t</td>\r\n\t\t\t</tr>\r\n\t\t\t);\r\n\t\tconsole.log(\"EventParticipant.render: list calculated from \"+JSON.stringify( this.state.event.participantlist ));\r\n\t\tconsole.log(\"EventParticipant.render: \"+listParticipantListHtml.length);\r\n\t\t\r\n\t\t// invitation\r\n\t\tvar invitationPanel = ( <div class=\"panel panel-info\">\r\n\t\t\t<div class=\"panel-heading\">Invitation</div>\r\n\t\t\t<div class=\"panel-body\">\r\n\t\t\t\t<Invitation />\r\n\t\t\t</div>\r\n\t\t\t</div> );\r\n\t\t\r\n\t\treturn ( <div>\r\n\t\t\t\t\t<div class=\"eventsection\"> \r\n\t\t\t\t\t\t<a href=\"secParticipantlist\"></a>\r\n\t\t\t\t\t\t<a onClick={this.collapse}>\r\n\t\t\t\t\t\t\t{this.state.show === 'ON' && <span class=\"glyphicon glyphicon-chevron-down\"></span>}\r\n\t\t\t\t\t\t\t{this.state.show === 'COLLAPSE' && <span class=\"glyphicon glyphicon-chevron-right\"></span>}\r\n\t\t\t\t\t\t</a> Participants\r\n\t\t\t\t\t\t<div style={{float: \"right\"}}>\r\n\t\t\t\t\t\t\t<button class=\"btn btn-success btn-xs glyphicon glyphicon-plus\" onClick={this.addItem} title=\"Invite a new person\">Invit</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div> \r\n\t\t\t\t\t{this.state.showInvitation && {invitationPanel} }\r\n\t\t\t\t\t{this.state.show ==='ON' && \t<table class=\"table table-striped\">\r\n\t\t\t\t\t\t\t\t\t\t\t<tr class=\"itemheader\">\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<th>Person</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<th>Role</th>\r\n\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t{listParticipantListHtml}\r\n\t\t\t\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t}\r\n\t\t\r\n\tcollapse() {\r\n\t\tconsole.log(\"EventParticipant.collapse\");\r\n\t\tif (this.state.show === 'ON')\r\n\t\t\tthis.setState( { 'show' : 'COLLAPSE' });\r\n\t\telse\r\n\t\t\tthis.setState( { 'show' : 'ON' });\r\n\t}\r\n\t\r\n\tsetChildAttribut( name, value, item ) {\r\n\t\tconsole.log(\"EventParticipant.setChildAttribut: set attribut:\"+name+\" <= \"+value+\" item=\"+JSON.stringify(item));\r\n\t\tconst { event } = { ...this.state };\r\n  \t\tconst currentEvent = event;\r\n\r\n  \t\titem[ name ] = value;\r\n\r\n\t\t// currentEvent.shoppinglist[0].[name] = value;\r\n\t\t\r\n\t\tthis.setState( { \"event\" : currentEvent});\r\n\t\tthis.props.pingEvent();\r\n\t}\r\n\t\r\n\taddItem() {\r\n\t\tconsole.log(\"EventParticipant.setChildAttribut: addItem item=\"+JSON.stringify(this.state.event));\r\n\r\n\t\tvar currentEvent = this.state.event;\t\t\r\n\t\tconst newList = currentEvent.shoppinglist.concat( {}  );\r\n\t\tcurrentEvent.participantlist = newList;\r\n\t\tthis.setState( { \"event\" : currentEvent});\r\n\t\tthis.props.pingEvent();\r\n\t}\r\n\t\r\n\t\r\n}\t\t\r\nexport default EventParticipants;\r\n","d:\\dev\\git\\togh\\npm\\src\\EventShoppingList.jsx",["187","188"],"// -----------------------------------------------------------\r\n//\r\n// EventShoppingList\r\n//\r\n// Display one event\r\n//\r\n// -----------------------------------------------------------\r\nimport React from 'react';\r\n\r\nclass EventShoppingList extends React.Component {\r\n\t\r\n\t// this.props.pingEvent()\r\n\tconstructor( props ) {\r\n\t\tsuper();\r\n\t\t// console.log(\"RegisterNewUser.constructor\");\r\n\r\n\t\tthis.state = { 'event' : props.event, \r\n\t\t\t\t\t\t'show' : props.show,\r\n\t\t\t\t\t\t'collapse' : props.collapse\r\n\t\t\t\t\t\t};\r\n\t\t// show : OFF, ON, COLLAPSE\r\n\t\tconsole.log(\"secShoppinglist.constructor show=\"+ +this.state.show+\" event=\"+JSON.stringify(this.state.event));\r\n\t\tthis.collapse \t\t\t\t= this.collapse.bind(this);\r\n\t\tthis.setChildAttribut\t\t= this.setChildAttribut.bind(this);\r\n\t\tthis.addItem\t\t\t\t= this.addItem.bind(this);\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\tconsole.log(\"EventShoppinglist.render: visible=\"+this.state.show);\r\n\t\tif (this.state.show === 'OFF')\r\n\t\t\treturn ( <div> </div>);\r\n\t\t// show the list\r\n\t\tvar listShoppingListHtml=[];\r\n\t\tlistShoppingListHtml= this.state.event.shoppinglist.map((item) =>\r\n\t\t\t<tr class=\"itemcontent\">\r\n\t\t\t\t<td><input value={item.what} onChange={(event) => this.setChildAttribut( \"what\", event.target.value, item )} class=\"toghinput\"></input></td>\r\n\t\t\t\t<td><input value={item.description} onChange={(event) => this.setChildAttribut( \"description\", event.target.value, item )} class=\"toghinput\"></input></td>\r\n\t\t\t\t<td><input value={item.who} onChange={(event) => this.setChildAttribut( \"who\", event.target.value, item )} class=\"toghinput\"></input></td>\r\n\t\t\t\t<td><button class=\"btn btn-danger btn-xs glyphicon glyphicon-minus\" onClick={() => this.removeItem( item )} title=\"Remove this item\"></button></td>\r\n\t\t\t</tr>\r\n\t\t\t);\r\n\t\tconsole.log(\"EventShoppinglist.render: list calculated from \"+JSON.stringify( this.state.event.shoppinglist ));\r\n\t\tconsole.log(\"EventShoppinglist.render: \"+listShoppingListHtml.length);\r\n\t\treturn ( <div>\r\n\t\t\t\t\t<div class=\"eventsection\"> \r\n\t\t\t\t\t\t<a href=\"secShoppinglist\" href=\"/#\"></a>\r\n\t\t\t\t\t\t<a onClick={this.collapse}  href=\"/#\">\r\n\t\t\t\t\t\t\t{this.state.show === 'ON' && <span class=\"glyphicon glyphicon-chevron-down\"></span>}\r\n\t\t\t\t\t\t\t{this.state.show === 'COLLAPSE' && <span class=\"glyphicon glyphicon-chevron-right\"></span>}\r\n\t\t\t\t\t\t</a> Shopping List\r\n\t\t\t\t\t\t<div style={{float: \"right\"}}>\r\n\t\t\t\t\t\t\t<button class=\"btn btn-success btn-xs glyphicon glyphicon-plus\" onClick={this.addItem} title=\"Add a new item in the list\"></button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div> \r\n\t\t\t\t\t{this.state.show ==='ON' && \t<table class=\"table table-striped\">\r\n\t\t\t\t\t\t\t\t\t\t\t<tr class=\"itemheader\">\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<th>What</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<th>Description</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<th>Who</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<th></th>\r\n\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t{listShoppingListHtml}\r\n\t\t\t\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t}\r\n\t\t\r\n\tcollapse() {\r\n\t\tconsole.log(\"EventShoppinglist.collapse\");\r\n\t\tif (this.state.show === 'ON')\r\n\t\t\tthis.setState( { 'show' : 'COLLAPSE' });\r\n\t\telse\r\n\t\t\tthis.setState( { 'show' : 'ON' });\r\n\t}\r\n\t\r\n\tsetChildAttribut( name, value, item ) {\r\n\t\tconsole.log(\"EventShoppinglist.setChildAttribut: set attribut:\"+name+\" <= \"+value+\" item=\"+JSON.stringify(item));\r\n\t\tconst { event } = { ...this.state };\r\n  \t\tconst currentEvent = event;\r\n\r\n  \t\titem[ name ] = value;\r\n\r\n\t\t// currentEvent.shoppinglist[0].[name] = value;\r\n\t\t\r\n\t\tthis.setState( { \"event\" : currentEvent});\r\n\t\tthis.props.pingEvent();\r\n\t}\r\n\t\r\n\taddItem() {\r\n\t\tconsole.log(\"EventShoppinglist.setChildAttribut: addItem item=\"+JSON.stringify(this.state.event));\r\n\r\n\t\tvar currentEvent = this.state.event;\t\t\r\n\t\tconst newList = currentEvent.shoppinglist.concat( {\"what\": \"HH\"} );\r\n\t\tcurrentEvent.shoppinglist = newList;\r\n\t\tthis.setState( { \"event\" : currentEvent});\r\n\t\tthis.props.pingEvent();\r\n\t}\r\n\t\r\n\tremoveItem( item ) {\r\n\t\tconsole.log(\"EventShoppinglist.removeItem: event=\"+JSON.stringify(this.state.event));\r\n\r\n\t\tvar currentEvent = this.state.event;\t\r\n\t\tvar listShopping = \tcurrentEvent.shoppinglist;\r\n\t\tvar index = listShopping.indexOf(item);\r\n  \t\tif (index > -1) {\r\n   \t\t\tlistShopping.splice(index, 1);\r\n  \t\t}\r\n\t\tconsole.log(\"EventShoppinglist.removeItem: \"+JSON.stringify(listShopping));\r\n\t\tcurrentEvent.shoppinglist = listShopping;\r\n\t\tconsole.log(\"EventShoppinglist.removeItem: eventAfter=\"+JSON.stringify(this.state.event));\r\n\r\n\t\tthis.setState( { \"event\" : currentEvent });\r\n\t\tthis.props.pingEvent();\t\r\n\t} \r\n}\t\t\r\nexport default EventShoppingList;\r\n\t","d:\\dev\\git\\togh\\npm\\src\\Invitation.jsx",[],"D:\\dev\\git\\togh\\npm\\src\\EventState.jsx",[],"D:\\dev\\git\\togh\\npm\\src\\ChooseParticipant.jsx",["189","190","191"],"D:\\dev\\git\\togh\\npm\\src\\EventGeolocalisation.jsx",["192","193","194","195"],{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","severity":1,"message":"201","line":14,"column":2,"nodeType":"202","messageId":"203","endLine":16,"endColumn":4},{"ruleId":"204","severity":1,"message":"205","line":18,"column":8,"nodeType":"206","messageId":"207","endLine":18,"endColumn":19},{"ruleId":"208","severity":1,"message":"209","line":58,"column":9,"nodeType":"210","endLine":58,"endColumn":67},{"ruleId":"204","severity":1,"message":"211","line":10,"column":21,"nodeType":"206","messageId":"207","endLine":10,"endColumn":27},{"ruleId":"204","severity":1,"message":"212","line":11,"column":10,"nodeType":"206","messageId":"207","endLine":11,"endColumn":16},{"ruleId":"204","severity":1,"message":"213","line":12,"column":10,"nodeType":"206","messageId":"207","endLine":12,"endColumn":20},{"ruleId":"214","severity":1,"message":"215","line":201,"column":69,"nodeType":"216","endLine":201,"endColumn":105},{"ruleId":"217","severity":1,"message":"218","line":78,"column":7,"nodeType":"210","endLine":78,"endColumn":36},{"ruleId":"219","severity":1,"message":"220","line":79,"column":7,"nodeType":"210","endLine":79,"endColumn":34},{"ruleId":"214","severity":1,"message":"215","line":45,"column":162,"nodeType":"216","endLine":45,"endColumn":174},{"ruleId":"217","severity":1,"message":"218","line":58,"column":7,"nodeType":"210","endLine":58,"endColumn":43},{"ruleId":"214","severity":1,"message":"215","line":58,"column":33,"nodeType":"216","endLine":58,"endColumn":42},{"ruleId":"204","severity":1,"message":"211","line":21,"column":10,"nodeType":"206","messageId":"207","endLine":21,"endColumn":16},{"ruleId":"214","severity":1,"message":"215","line":109,"column":74,"nodeType":"216","endLine":109,"endColumn":94},{"ruleId":"214","severity":1,"message":"215","line":137,"column":75,"nodeType":"216","endLine":137,"endColumn":98},{"ruleId":"204","severity":1,"message":"221","line":14,"column":8,"nodeType":"206","messageId":"207","endLine":14,"endColumn":22},{"ruleId":"204","severity":1,"message":"222","line":15,"column":8,"nodeType":"206","messageId":"207","endLine":15,"endColumn":23},{"ruleId":"204","severity":1,"message":"223","line":121,"column":7,"nodeType":"206","messageId":"207","endLine":121,"endColumn":14},{"ruleId":"204","severity":1,"message":"221","line":12,"column":8,"nodeType":"206","messageId":"207","endLine":12,"endColumn":22},{"ruleId":"204","severity":1,"message":"205","line":13,"column":8,"nodeType":"206","messageId":"207","endLine":13,"endColumn":19},{"ruleId":"196","replacedBy":"224"},{"ruleId":"198","replacedBy":"225"},{"ruleId":"200","severity":1,"message":"201","line":14,"column":2,"nodeType":"202","messageId":"203","endLine":16,"endColumn":4},{"ruleId":"204","severity":1,"message":"205","line":18,"column":8,"nodeType":"206","messageId":"207","endLine":18,"endColumn":19},{"ruleId":"208","severity":1,"message":"209","line":58,"column":9,"nodeType":"210","endLine":58,"endColumn":67},{"ruleId":"204","severity":1,"message":"221","line":14,"column":8,"nodeType":"206","messageId":"207","endLine":14,"endColumn":22},{"ruleId":"204","severity":1,"message":"222","line":15,"column":8,"nodeType":"206","messageId":"207","endLine":15,"endColumn":23},{"ruleId":"204","severity":1,"message":"223","line":101,"column":7,"nodeType":"206","messageId":"207","endLine":101,"endColumn":14},{"ruleId":"204","severity":1,"message":"226","line":17,"column":10,"nodeType":"206","messageId":"207","endLine":17,"endColumn":26},{"ruleId":"204","severity":1,"message":"213","line":18,"column":10,"nodeType":"206","messageId":"207","endLine":18,"endColumn":20},{"ruleId":"214","severity":1,"message":"215","line":193,"column":69,"nodeType":"216","endLine":193,"endColumn":105},{"ruleId":"204","severity":1,"message":"221","line":12,"column":8,"nodeType":"206","messageId":"207","endLine":12,"endColumn":22},{"ruleId":"204","severity":1,"message":"205","line":13,"column":8,"nodeType":"206","messageId":"207","endLine":13,"endColumn":19},{"ruleId":"217","severity":1,"message":"218","line":71,"column":7,"nodeType":"210","endLine":71,"endColumn":36},{"ruleId":"219","severity":1,"message":"220","line":72,"column":7,"nodeType":"210","endLine":72,"endColumn":34},{"ruleId":"217","severity":1,"message":"218","line":47,"column":7,"nodeType":"210","endLine":47,"endColumn":43},{"ruleId":"214","severity":1,"message":"215","line":47,"column":33,"nodeType":"216","endLine":47,"endColumn":42},{"ruleId":"204","severity":1,"message":"227","line":13,"column":10,"nodeType":"206","messageId":"207","endLine":13,"endColumn":16},{"ruleId":"204","severity":1,"message":"228","line":14,"column":10,"nodeType":"206","messageId":"207","endLine":14,"endColumn":28},{"ruleId":"204","severity":1,"message":"229","line":15,"column":10,"nodeType":"206","messageId":"207","endLine":15,"endColumn":28},{"ruleId":"204","severity":1,"message":"230","line":15,"column":8,"nodeType":"206","messageId":"207","endLine":15,"endColumn":15},{"ruleId":"204","severity":1,"message":"231","line":47,"column":9,"nodeType":"206","messageId":"207","endLine":47,"endColumn":23},{"ruleId":"217","severity":1,"message":"218","line":71,"column":7,"nodeType":"210","endLine":71,"endColumn":46},{"ruleId":"214","severity":1,"message":"215","line":71,"column":36,"nodeType":"216","endLine":71,"endColumn":45},"no-native-reassign",["232"],"no-negated-in-lhs",["233"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'AuthService' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","'Select' is defined but never used.","'SelectItem' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'FactoryService' is defined but never used.","'RestcallService' is defined but never used.","'headers' is assigned a value but never used.",["232"],["233"],"'TimePickerSelect' is defined but never used.","'Search' is defined but never used.","'SearchFilterButton' is defined but never used.","'SearchLayoutButton' is defined but never used.","'Geocode' is defined but never used.","'googlelocation' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]